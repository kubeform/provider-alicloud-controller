/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DatabaseDbInstance struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DatabaseDbInstanceSpec   `json:"spec,omitempty"`
	Status            DatabaseDbInstanceStatus `json:"status,omitempty"`
}

type DatabaseDbInstanceSpecDbInstanceIPArray struct {
	// +optional
	DbInstanceIPArrayAttribute *string `json:"dbInstanceIPArrayAttribute,omitempty" tf:"db_instance_ip_array_attribute"`
	// +optional
	DbInstanceIPArrayName *string `json:"dbInstanceIPArrayName,omitempty" tf:"db_instance_ip_array_name"`
	// +optional
	SecurityIPS *string `json:"securityIPS,omitempty" tf:"security_ips"`
}

type DatabaseDbInstanceSpec struct {
	State *DatabaseDbInstanceSpecResource `json:"state,omitempty" tf:"-"`

	Resource DatabaseDbInstanceSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type DatabaseDbInstanceSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	DbInstanceCategory *string `json:"dbInstanceCategory" tf:"db_instance_category"`
	// +optional
	DbInstanceDescription *string `json:"dbInstanceDescription,omitempty" tf:"db_instance_description"`
	// +optional
	DbInstanceIPArray     []DatabaseDbInstanceSpecDbInstanceIPArray `json:"dbInstanceIPArray,omitempty" tf:"db_instance_ip_array"`
	DbInstanceNetworkType *string                                   `json:"dbInstanceNetworkType" tf:"db_instance_network_type"`
	DbInstanceStorageType *string                                   `json:"dbInstanceStorageType" tf:"db_instance_storage_type"`
	DbNodeClass           *string                                   `json:"dbNodeClass" tf:"db_node_class"`
	DbNodeStorage         *int64                                    `json:"dbNodeStorage" tf:"db_node_storage"`
	DbVersion             *string                                   `json:"dbVersion" tf:"db_version"`
	PaymentType           *string                                   `json:"paymentType" tf:"payment_type"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	VswitchID *string `json:"vswitchID,omitempty" tf:"vswitch_id"`
	// +optional
	ZoneID *string `json:"zoneID,omitempty" tf:"zone_id"`
}

type DatabaseDbInstanceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DatabaseDbInstanceList is a list of DatabaseDbInstances
type DatabaseDbInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DatabaseDbInstance CRD objects
	Items []DatabaseDbInstance `json:"items,omitempty"`
}
