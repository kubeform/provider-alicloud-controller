/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type JobTemplate struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              JobTemplateSpec   `json:"spec,omitempty"`
	Status            JobTemplateStatus `json:"status,omitempty"`
}

type JobTemplateSpec struct {
	State *JobTemplateSpecResource `json:"state,omitempty" tf:"-"`

	Resource JobTemplateSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type JobTemplateSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	ArrayRequest *string `json:"arrayRequest,omitempty" tf:"array_request"`
	// +optional
	ClockTime   *string `json:"clockTime,omitempty" tf:"clock_time"`
	CommandLine *string `json:"commandLine" tf:"command_line"`
	// +optional
	Gpu             *int64  `json:"gpu,omitempty" tf:"gpu"`
	JobTemplateName *string `json:"jobTemplateName" tf:"job_template_name"`
	// +optional
	Mem *string `json:"mem,omitempty" tf:"mem"`
	// +optional
	Node *int64 `json:"node,omitempty" tf:"node"`
	// +optional
	PackagePath *string `json:"packagePath,omitempty" tf:"package_path"`
	// +optional
	Priority *int64 `json:"priority,omitempty" tf:"priority"`
	// +optional
	Queue *string `json:"queue,omitempty" tf:"queue"`
	// +optional
	ReRunable *bool `json:"reRunable,omitempty" tf:"re_runable"`
	// +optional
	RunasUser *string `json:"runasUser,omitempty" tf:"runas_user"`
	// +optional
	StderrRedirectPath *string `json:"stderrRedirectPath,omitempty" tf:"stderr_redirect_path"`
	// +optional
	StdoutRedirectPath *string `json:"stdoutRedirectPath,omitempty" tf:"stdout_redirect_path"`
	// +optional
	Task *int64 `json:"task,omitempty" tf:"task"`
	// +optional
	Thread *int64 `json:"thread,omitempty" tf:"thread"`
	// +optional
	Variables *string `json:"variables,omitempty" tf:"variables"`
}

type JobTemplateStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// JobTemplateList is a list of JobTemplates
type JobTemplateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of JobTemplate CRD objects
	Items []JobTemplate `json:"items,omitempty"`
}
