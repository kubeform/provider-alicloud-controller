/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ScalingConfiguration struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ScalingConfigurationSpec   `json:"spec,omitempty"`
	Status            ScalingConfigurationStatus `json:"status,omitempty"`
}

type ScalingConfigurationSpecDataDisk struct {
	// +optional
	AutoSnapshotPolicyID *string `json:"autoSnapshotPolicyID,omitempty" tf:"auto_snapshot_policy_id"`
	// +optional
	Category *string `json:"category,omitempty" tf:"category"`
	// +optional
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	// Deprecated
	Device *string `json:"device,omitempty" tf:"device"`
	// +optional
	Encrypted *bool `json:"encrypted,omitempty" tf:"encrypted"`
	// +optional
	KmsKeyID *string `json:"kmsKeyID,omitempty" tf:"kms_key_id"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	PerformanceLevel *string `json:"performanceLevel,omitempty" tf:"performance_level"`
	// +optional
	Size *int64 `json:"size,omitempty" tf:"size"`
	// +optional
	SnapshotID *string `json:"snapshotID,omitempty" tf:"snapshot_id"`
}

type ScalingConfigurationSpec struct {
	State *ScalingConfigurationSpecResource `json:"state,omitempty" tf:"-"`

	Resource ScalingConfigurationSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type ScalingConfigurationSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Active *bool `json:"active,omitempty" tf:"active"`
	// +optional
	CreditSpecification *string `json:"creditSpecification,omitempty" tf:"credit_specification"`
	// +optional
	DataDisk []ScalingConfigurationSpecDataDisk `json:"dataDisk,omitempty" tf:"data_disk"`
	// +optional
	Enable *bool `json:"enable,omitempty" tf:"enable"`
	// +optional
	ForceDelete *bool `json:"forceDelete,omitempty" tf:"force_delete"`
	// +optional
	ImageID *string `json:"imageID,omitempty" tf:"image_id"`
	// +optional
	ImageName *string `json:"imageName,omitempty" tf:"image_name"`
	// +optional
	// Deprecated
	InstanceIDS []string `json:"instanceIDS,omitempty" tf:"instance_ids"`
	// +optional
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name"`
	// +optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type"`
	// +optional
	// +kubebuilder:validation:MaxItems=10
	InstanceTypes []string `json:"instanceTypes,omitempty" tf:"instance_types"`
	// +optional
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type"`
	// +optional
	InternetMaxBandwidthIn *int64 `json:"internetMaxBandwidthIn,omitempty" tf:"internet_max_bandwidth_in"`
	// +optional
	InternetMaxBandwidthOut *int64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out"`
	// +optional
	// Deprecated
	IoOptimized *string `json:"ioOptimized,omitempty" tf:"io_optimized"`
	// +optional
	IsOutdated *bool `json:"isOutdated,omitempty" tf:"is_outdated"`
	// +optional
	KeyName *string `json:"keyName,omitempty" tf:"key_name"`
	// +optional
	KmsEncryptedPassword *string `json:"kmsEncryptedPassword,omitempty" tf:"kms_encrypted_password"`
	// +optional
	KmsEncryptionContext map[string]string `json:"kmsEncryptionContext,omitempty" tf:"kms_encryption_context"`
	// +optional
	Override *bool `json:"override,omitempty" tf:"override"`
	// +optional
	Password *string `json:"password,omitempty" tf:"password"`
	// +optional
	PasswordInherit *bool `json:"passwordInherit,omitempty" tf:"password_inherit"`
	// +optional
	RoleName *string `json:"roleName,omitempty" tf:"role_name"`
	// +optional
	ScalingConfigurationName *string `json:"scalingConfigurationName,omitempty" tf:"scaling_configuration_name"`
	ScalingGroupID           *string `json:"scalingGroupID" tf:"scaling_group_id"`
	// +optional
	SecurityGroupID *string `json:"securityGroupID,omitempty" tf:"security_group_id"`
	// +optional
	// +kubebuilder:validation:MaxItems=16
	SecurityGroupIDS []string `json:"securityGroupIDS,omitempty" tf:"security_group_ids"`
	// +optional
	Substitute *string `json:"substitute,omitempty" tf:"substitute"`
	// +optional
	SystemDiskAutoSnapshotPolicyID *string `json:"systemDiskAutoSnapshotPolicyID,omitempty" tf:"system_disk_auto_snapshot_policy_id"`
	// +optional
	SystemDiskCategory *string `json:"systemDiskCategory,omitempty" tf:"system_disk_category"`
	// +optional
	SystemDiskDescription *string `json:"systemDiskDescription,omitempty" tf:"system_disk_description"`
	// +optional
	SystemDiskName *string `json:"systemDiskName,omitempty" tf:"system_disk_name"`
	// +optional
	SystemDiskPerformanceLevel *string `json:"systemDiskPerformanceLevel,omitempty" tf:"system_disk_performance_level"`
	// +optional
	SystemDiskSize *int64 `json:"systemDiskSize,omitempty" tf:"system_disk_size"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	UserData *string `json:"userData,omitempty" tf:"user_data"`
}

type ScalingConfigurationStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ScalingConfigurationList is a list of ScalingConfigurations
type ScalingConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ScalingConfiguration CRD objects
	Items []ScalingConfiguration `json:"items,omitempty"`
}
