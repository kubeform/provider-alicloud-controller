/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ScalingGroup struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ScalingGroupSpec   `json:"spec,omitempty"`
	Status            ScalingGroupStatus `json:"status,omitempty"`
}

type ScalingGroupSpec struct {
	State *ScalingGroupSpecResource `json:"state,omitempty" tf:"-"`

	Resource ScalingGroupSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ScalingGroupSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	DbInstanceIDS []string `json:"dbInstanceIDS,omitempty" tf:"db_instance_ids"`
	// +optional
	DefaultCooldown *int64 `json:"defaultCooldown,omitempty" tf:"default_cooldown"`
	// +optional
	DesiredCapacity *int64 `json:"desiredCapacity,omitempty" tf:"desired_capacity"`
	// +optional
	GroupDeletionProtection *bool `json:"groupDeletionProtection,omitempty" tf:"group_deletion_protection"`
	// +optional
	LoadbalancerIDS []string `json:"loadbalancerIDS,omitempty" tf:"loadbalancer_ids"`
	MaxSize         *int64   `json:"maxSize" tf:"max_size"`
	MinSize         *int64   `json:"minSize" tf:"min_size"`
	// +optional
	MultiAzPolicy *string `json:"multiAzPolicy,omitempty" tf:"multi_az_policy"`
	// +optional
	OnDemandBaseCapacity *int64 `json:"onDemandBaseCapacity,omitempty" tf:"on_demand_base_capacity"`
	// +optional
	OnDemandPercentageAboveBaseCapacity *int64 `json:"onDemandPercentageAboveBaseCapacity,omitempty" tf:"on_demand_percentage_above_base_capacity"`
	// +optional
	// +kubebuilder:validation:MaxItems=2
	// +kubebuilder:validation:MinItems=1
	RemovalPolicies []string `json:"removalPolicies,omitempty" tf:"removal_policies"`
	// +optional
	ScalingGroupName *string `json:"scalingGroupName,omitempty" tf:"scaling_group_name"`
	// +optional
	SpotInstancePools *int64 `json:"spotInstancePools,omitempty" tf:"spot_instance_pools"`
	// +optional
	SpotInstanceRemedy *bool `json:"spotInstanceRemedy,omitempty" tf:"spot_instance_remedy"`
	// +optional
	// Deprecated
	VswitchID *string `json:"vswitchID,omitempty" tf:"vswitch_id"`
	// +optional
	// +kubebuilder:validation:MinItems=1
	VswitchIDS []string `json:"vswitchIDS,omitempty" tf:"vswitch_ids"`
}

type ScalingGroupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ScalingGroupList is a list of ScalingGroups
type ScalingGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ScalingGroup CRD objects
	Items []ScalingGroup `json:"items,omitempty"`
}
