/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ScalingRule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ScalingRuleSpec   `json:"spec,omitempty"`
	Status            ScalingRuleStatus `json:"status,omitempty"`
}

type ScalingRuleSpecStepAdjustment struct {
	// +optional
	MetricIntervalLowerBound *string `json:"metricIntervalLowerBound,omitempty" tf:"metric_interval_lower_bound"`
	// +optional
	MetricIntervalUpperBound *string `json:"metricIntervalUpperBound,omitempty" tf:"metric_interval_upper_bound"`
	// +optional
	ScalingAdjustment *int64 `json:"scalingAdjustment,omitempty" tf:"scaling_adjustment"`
}

type ScalingRuleSpec struct {
	State *ScalingRuleSpecResource `json:"state,omitempty" tf:"-"`

	Resource ScalingRuleSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type ScalingRuleSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AdjustmentType *string `json:"adjustmentType,omitempty" tf:"adjustment_type"`
	// +optional
	AdjustmentValue *int64 `json:"adjustmentValue,omitempty" tf:"adjustment_value"`
	// +optional
	Ari *string `json:"ari,omitempty" tf:"ari"`
	// +optional
	Cooldown *int64 `json:"cooldown,omitempty" tf:"cooldown"`
	// +optional
	DisableScaleIn *bool `json:"disableScaleIn,omitempty" tf:"disable_scale_in"`
	// +optional
	EstimatedInstanceWarmup *int64 `json:"estimatedInstanceWarmup,omitempty" tf:"estimated_instance_warmup"`
	// +optional
	MetricName     *string `json:"metricName,omitempty" tf:"metric_name"`
	ScalingGroupID *string `json:"scalingGroupID" tf:"scaling_group_id"`
	// +optional
	ScalingRuleName *string `json:"scalingRuleName,omitempty" tf:"scaling_rule_name"`
	// +optional
	ScalingRuleType *string `json:"scalingRuleType,omitempty" tf:"scaling_rule_type"`
	// +optional
	// +kubebuilder:validation:MinItems=1
	StepAdjustment []ScalingRuleSpecStepAdjustment `json:"stepAdjustment,omitempty" tf:"step_adjustment"`
	// +optional
	TargetValue *float64 `json:"targetValue,omitempty" tf:"target_value"`
}

type ScalingRuleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ScalingRuleList is a list of ScalingRules
type ScalingRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ScalingRule CRD objects
	Items []ScalingRule `json:"items,omitempty"`
}
