//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Alarm) DeepCopyInto(out *Alarm) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Alarm.
func (in *Alarm) DeepCopy() *Alarm {
	if in == nil {
		return nil
	}
	out := new(Alarm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Alarm) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlarmList) DeepCopyInto(out *AlarmList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Alarm, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlarmList.
func (in *AlarmList) DeepCopy() *AlarmList {
	if in == nil {
		return nil
	}
	out := new(AlarmList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlarmList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlarmSpec) DeepCopyInto(out *AlarmSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AlarmSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlarmSpec.
func (in *AlarmSpec) DeepCopy() *AlarmSpec {
	if in == nil {
		return nil
	}
	out := new(AlarmSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlarmSpecResource) DeepCopyInto(out *AlarmSpecResource) {
	*out = *in
	if in.AlarmActions != nil {
		in, out := &in.AlarmActions, &out.AlarmActions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CloudMonitorGroupID != nil {
		in, out := &in.CloudMonitorGroupID, &out.CloudMonitorGroupID
		*out = new(int64)
		**out = **in
	}
	if in.ComparisonOperator != nil {
		in, out := &in.ComparisonOperator, &out.ComparisonOperator
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.EvaluationCount != nil {
		in, out := &in.EvaluationCount, &out.EvaluationCount
		*out = new(int64)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricType != nil {
		in, out := &in.MetricType, &out.MetricType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(int64)
		**out = **in
	}
	if in.ScalingGroupID != nil {
		in, out := &in.ScalingGroupID, &out.ScalingGroupID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Statistics != nil {
		in, out := &in.Statistics, &out.Statistics
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlarmSpecResource.
func (in *AlarmSpecResource) DeepCopy() *AlarmSpecResource {
	if in == nil {
		return nil
	}
	out := new(AlarmSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlarmStatus) DeepCopyInto(out *AlarmStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlarmStatus.
func (in *AlarmStatus) DeepCopy() *AlarmStatus {
	if in == nil {
		return nil
	}
	out := new(AlarmStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Attachment) DeepCopyInto(out *Attachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Attachment.
func (in *Attachment) DeepCopy() *Attachment {
	if in == nil {
		return nil
	}
	out := new(Attachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Attachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentList) DeepCopyInto(out *AttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Attachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentList.
func (in *AttachmentList) DeepCopy() *AttachmentList {
	if in == nil {
		return nil
	}
	out := new(AttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentSpec) DeepCopyInto(out *AttachmentSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AttachmentSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentSpec.
func (in *AttachmentSpec) DeepCopy() *AttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(AttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentSpecResource) DeepCopyInto(out *AttachmentSpecResource) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.InstanceIDS != nil {
		in, out := &in.InstanceIDS, &out.InstanceIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ScalingGroupID != nil {
		in, out := &in.ScalingGroupID, &out.ScalingGroupID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentSpecResource.
func (in *AttachmentSpecResource) DeepCopy() *AttachmentSpecResource {
	if in == nil {
		return nil
	}
	out := new(AttachmentSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentStatus) DeepCopyInto(out *AttachmentStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentStatus.
func (in *AttachmentStatus) DeepCopy() *AttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(AttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleHook) DeepCopyInto(out *LifecycleHook) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleHook.
func (in *LifecycleHook) DeepCopy() *LifecycleHook {
	if in == nil {
		return nil
	}
	out := new(LifecycleHook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LifecycleHook) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleHookList) DeepCopyInto(out *LifecycleHookList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LifecycleHook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleHookList.
func (in *LifecycleHookList) DeepCopy() *LifecycleHookList {
	if in == nil {
		return nil
	}
	out := new(LifecycleHookList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LifecycleHookList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleHookSpec) DeepCopyInto(out *LifecycleHookSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(LifecycleHookSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleHookSpec.
func (in *LifecycleHookSpec) DeepCopy() *LifecycleHookSpec {
	if in == nil {
		return nil
	}
	out := new(LifecycleHookSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleHookSpecResource) DeepCopyInto(out *LifecycleHookSpecResource) {
	*out = *in
	if in.DefaultResult != nil {
		in, out := &in.DefaultResult, &out.DefaultResult
		*out = new(string)
		**out = **in
	}
	if in.HeartbeatTimeout != nil {
		in, out := &in.HeartbeatTimeout, &out.HeartbeatTimeout
		*out = new(int64)
		**out = **in
	}
	if in.LifecycleTransition != nil {
		in, out := &in.LifecycleTransition, &out.LifecycleTransition
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NotificationArn != nil {
		in, out := &in.NotificationArn, &out.NotificationArn
		*out = new(string)
		**out = **in
	}
	if in.NotificationMetadata != nil {
		in, out := &in.NotificationMetadata, &out.NotificationMetadata
		*out = new(string)
		**out = **in
	}
	if in.ScalingGroupID != nil {
		in, out := &in.ScalingGroupID, &out.ScalingGroupID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleHookSpecResource.
func (in *LifecycleHookSpecResource) DeepCopy() *LifecycleHookSpecResource {
	if in == nil {
		return nil
	}
	out := new(LifecycleHookSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleHookStatus) DeepCopyInto(out *LifecycleHookStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleHookStatus.
func (in *LifecycleHookStatus) DeepCopy() *LifecycleHookStatus {
	if in == nil {
		return nil
	}
	out := new(LifecycleHookStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Notification) DeepCopyInto(out *Notification) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Notification.
func (in *Notification) DeepCopy() *Notification {
	if in == nil {
		return nil
	}
	out := new(Notification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Notification) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationList) DeepCopyInto(out *NotificationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Notification, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationList.
func (in *NotificationList) DeepCopy() *NotificationList {
	if in == nil {
		return nil
	}
	out := new(NotificationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotificationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSpec) DeepCopyInto(out *NotificationSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(NotificationSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSpec.
func (in *NotificationSpec) DeepCopy() *NotificationSpec {
	if in == nil {
		return nil
	}
	out := new(NotificationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSpecResource) DeepCopyInto(out *NotificationSpecResource) {
	*out = *in
	if in.NotificationArn != nil {
		in, out := &in.NotificationArn, &out.NotificationArn
		*out = new(string)
		**out = **in
	}
	if in.NotificationTypes != nil {
		in, out := &in.NotificationTypes, &out.NotificationTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ScalingGroupID != nil {
		in, out := &in.ScalingGroupID, &out.ScalingGroupID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSpecResource.
func (in *NotificationSpecResource) DeepCopy() *NotificationSpecResource {
	if in == nil {
		return nil
	}
	out := new(NotificationSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationStatus) DeepCopyInto(out *NotificationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationStatus.
func (in *NotificationStatus) DeepCopy() *NotificationStatus {
	if in == nil {
		return nil
	}
	out := new(NotificationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfiguration) DeepCopyInto(out *ScalingConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfiguration.
func (in *ScalingConfiguration) DeepCopy() *ScalingConfiguration {
	if in == nil {
		return nil
	}
	out := new(ScalingConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalingConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigurationList) DeepCopyInto(out *ScalingConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScalingConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigurationList.
func (in *ScalingConfigurationList) DeepCopy() *ScalingConfigurationList {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalingConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigurationSpec) DeepCopyInto(out *ScalingConfigurationSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ScalingConfigurationSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigurationSpec.
func (in *ScalingConfigurationSpec) DeepCopy() *ScalingConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigurationSpecDataDisk) DeepCopyInto(out *ScalingConfigurationSpecDataDisk) {
	*out = *in
	if in.AutoSnapshotPolicyID != nil {
		in, out := &in.AutoSnapshotPolicyID, &out.AutoSnapshotPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.DeleteWithInstance != nil {
		in, out := &in.DeleteWithInstance, &out.DeleteWithInstance
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PerformanceLevel != nil {
		in, out := &in.PerformanceLevel, &out.PerformanceLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(int64)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigurationSpecDataDisk.
func (in *ScalingConfigurationSpecDataDisk) DeepCopy() *ScalingConfigurationSpecDataDisk {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigurationSpecDataDisk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigurationSpecResource) DeepCopyInto(out *ScalingConfigurationSpecResource) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = new(string)
		**out = **in
	}
	if in.DataDisk != nil {
		in, out := &in.DataDisk, &out.DataDisk
		*out = make([]ScalingConfigurationSpecDataDisk, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDS != nil {
		in, out := &in.InstanceIDS, &out.InstanceIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.InstanceName != nil {
		in, out := &in.InstanceName, &out.InstanceName
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.InstanceTypes != nil {
		in, out := &in.InstanceTypes, &out.InstanceTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.InternetChargeType != nil {
		in, out := &in.InternetChargeType, &out.InternetChargeType
		*out = new(string)
		**out = **in
	}
	if in.InternetMaxBandwidthIn != nil {
		in, out := &in.InternetMaxBandwidthIn, &out.InternetMaxBandwidthIn
		*out = new(int64)
		**out = **in
	}
	if in.InternetMaxBandwidthOut != nil {
		in, out := &in.InternetMaxBandwidthOut, &out.InternetMaxBandwidthOut
		*out = new(int64)
		**out = **in
	}
	if in.IoOptimized != nil {
		in, out := &in.IoOptimized, &out.IoOptimized
		*out = new(string)
		**out = **in
	}
	if in.IsOutdated != nil {
		in, out := &in.IsOutdated, &out.IsOutdated
		*out = new(bool)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.KmsEncryptedPassword != nil {
		in, out := &in.KmsEncryptedPassword, &out.KmsEncryptedPassword
		*out = new(string)
		**out = **in
	}
	if in.KmsEncryptionContext != nil {
		in, out := &in.KmsEncryptionContext, &out.KmsEncryptionContext
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Override != nil {
		in, out := &in.Override, &out.Override
		*out = new(bool)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.PasswordInherit != nil {
		in, out := &in.PasswordInherit, &out.PasswordInherit
		*out = new(bool)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
	if in.ScalingConfigurationName != nil {
		in, out := &in.ScalingConfigurationName, &out.ScalingConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.ScalingGroupID != nil {
		in, out := &in.ScalingGroupID, &out.ScalingGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDS != nil {
		in, out := &in.SecurityGroupIDS, &out.SecurityGroupIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Substitute != nil {
		in, out := &in.Substitute, &out.Substitute
		*out = new(string)
		**out = **in
	}
	if in.SystemDiskAutoSnapshotPolicyID != nil {
		in, out := &in.SystemDiskAutoSnapshotPolicyID, &out.SystemDiskAutoSnapshotPolicyID
		*out = new(string)
		**out = **in
	}
	if in.SystemDiskCategory != nil {
		in, out := &in.SystemDiskCategory, &out.SystemDiskCategory
		*out = new(string)
		**out = **in
	}
	if in.SystemDiskDescription != nil {
		in, out := &in.SystemDiskDescription, &out.SystemDiskDescription
		*out = new(string)
		**out = **in
	}
	if in.SystemDiskName != nil {
		in, out := &in.SystemDiskName, &out.SystemDiskName
		*out = new(string)
		**out = **in
	}
	if in.SystemDiskPerformanceLevel != nil {
		in, out := &in.SystemDiskPerformanceLevel, &out.SystemDiskPerformanceLevel
		*out = new(string)
		**out = **in
	}
	if in.SystemDiskSize != nil {
		in, out := &in.SystemDiskSize, &out.SystemDiskSize
		*out = new(int64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigurationSpecResource.
func (in *ScalingConfigurationSpecResource) DeepCopy() *ScalingConfigurationSpecResource {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigurationSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigurationStatus) DeepCopyInto(out *ScalingConfigurationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigurationStatus.
func (in *ScalingConfigurationStatus) DeepCopy() *ScalingConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingGroup) DeepCopyInto(out *ScalingGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingGroup.
func (in *ScalingGroup) DeepCopy() *ScalingGroup {
	if in == nil {
		return nil
	}
	out := new(ScalingGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalingGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingGroupList) DeepCopyInto(out *ScalingGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScalingGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingGroupList.
func (in *ScalingGroupList) DeepCopy() *ScalingGroupList {
	if in == nil {
		return nil
	}
	out := new(ScalingGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalingGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingGroupSpec) DeepCopyInto(out *ScalingGroupSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ScalingGroupSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingGroupSpec.
func (in *ScalingGroupSpec) DeepCopy() *ScalingGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ScalingGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingGroupSpecResource) DeepCopyInto(out *ScalingGroupSpecResource) {
	*out = *in
	if in.DbInstanceIDS != nil {
		in, out := &in.DbInstanceIDS, &out.DbInstanceIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DefaultCooldown != nil {
		in, out := &in.DefaultCooldown, &out.DefaultCooldown
		*out = new(int64)
		**out = **in
	}
	if in.DesiredCapacity != nil {
		in, out := &in.DesiredCapacity, &out.DesiredCapacity
		*out = new(int64)
		**out = **in
	}
	if in.GroupDeletionProtection != nil {
		in, out := &in.GroupDeletionProtection, &out.GroupDeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.LoadbalancerIDS != nil {
		in, out := &in.LoadbalancerIDS, &out.LoadbalancerIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(int64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(int64)
		**out = **in
	}
	if in.MultiAzPolicy != nil {
		in, out := &in.MultiAzPolicy, &out.MultiAzPolicy
		*out = new(string)
		**out = **in
	}
	if in.OnDemandBaseCapacity != nil {
		in, out := &in.OnDemandBaseCapacity, &out.OnDemandBaseCapacity
		*out = new(int64)
		**out = **in
	}
	if in.OnDemandPercentageAboveBaseCapacity != nil {
		in, out := &in.OnDemandPercentageAboveBaseCapacity, &out.OnDemandPercentageAboveBaseCapacity
		*out = new(int64)
		**out = **in
	}
	if in.RemovalPolicies != nil {
		in, out := &in.RemovalPolicies, &out.RemovalPolicies
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ScalingGroupName != nil {
		in, out := &in.ScalingGroupName, &out.ScalingGroupName
		*out = new(string)
		**out = **in
	}
	if in.SpotInstancePools != nil {
		in, out := &in.SpotInstancePools, &out.SpotInstancePools
		*out = new(int64)
		**out = **in
	}
	if in.SpotInstanceRemedy != nil {
		in, out := &in.SpotInstanceRemedy, &out.SpotInstanceRemedy
		*out = new(bool)
		**out = **in
	}
	if in.VswitchID != nil {
		in, out := &in.VswitchID, &out.VswitchID
		*out = new(string)
		**out = **in
	}
	if in.VswitchIDS != nil {
		in, out := &in.VswitchIDS, &out.VswitchIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingGroupSpecResource.
func (in *ScalingGroupSpecResource) DeepCopy() *ScalingGroupSpecResource {
	if in == nil {
		return nil
	}
	out := new(ScalingGroupSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingGroupStatus) DeepCopyInto(out *ScalingGroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingGroupStatus.
func (in *ScalingGroupStatus) DeepCopy() *ScalingGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ScalingGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingRule) DeepCopyInto(out *ScalingRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingRule.
func (in *ScalingRule) DeepCopy() *ScalingRule {
	if in == nil {
		return nil
	}
	out := new(ScalingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalingRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingRuleList) DeepCopyInto(out *ScalingRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScalingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingRuleList.
func (in *ScalingRuleList) DeepCopy() *ScalingRuleList {
	if in == nil {
		return nil
	}
	out := new(ScalingRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalingRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingRuleSpec) DeepCopyInto(out *ScalingRuleSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ScalingRuleSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingRuleSpec.
func (in *ScalingRuleSpec) DeepCopy() *ScalingRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ScalingRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingRuleSpecResource) DeepCopyInto(out *ScalingRuleSpecResource) {
	*out = *in
	if in.AdjustmentType != nil {
		in, out := &in.AdjustmentType, &out.AdjustmentType
		*out = new(string)
		**out = **in
	}
	if in.AdjustmentValue != nil {
		in, out := &in.AdjustmentValue, &out.AdjustmentValue
		*out = new(int64)
		**out = **in
	}
	if in.Ari != nil {
		in, out := &in.Ari, &out.Ari
		*out = new(string)
		**out = **in
	}
	if in.Cooldown != nil {
		in, out := &in.Cooldown, &out.Cooldown
		*out = new(int64)
		**out = **in
	}
	if in.DisableScaleIn != nil {
		in, out := &in.DisableScaleIn, &out.DisableScaleIn
		*out = new(bool)
		**out = **in
	}
	if in.EstimatedInstanceWarmup != nil {
		in, out := &in.EstimatedInstanceWarmup, &out.EstimatedInstanceWarmup
		*out = new(int64)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.ScalingGroupID != nil {
		in, out := &in.ScalingGroupID, &out.ScalingGroupID
		*out = new(string)
		**out = **in
	}
	if in.ScalingRuleName != nil {
		in, out := &in.ScalingRuleName, &out.ScalingRuleName
		*out = new(string)
		**out = **in
	}
	if in.ScalingRuleType != nil {
		in, out := &in.ScalingRuleType, &out.ScalingRuleType
		*out = new(string)
		**out = **in
	}
	if in.StepAdjustment != nil {
		in, out := &in.StepAdjustment, &out.StepAdjustment
		*out = make([]ScalingRuleSpecStepAdjustment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetValue != nil {
		in, out := &in.TargetValue, &out.TargetValue
		*out = new(float64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingRuleSpecResource.
func (in *ScalingRuleSpecResource) DeepCopy() *ScalingRuleSpecResource {
	if in == nil {
		return nil
	}
	out := new(ScalingRuleSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingRuleSpecStepAdjustment) DeepCopyInto(out *ScalingRuleSpecStepAdjustment) {
	*out = *in
	if in.MetricIntervalLowerBound != nil {
		in, out := &in.MetricIntervalLowerBound, &out.MetricIntervalLowerBound
		*out = new(string)
		**out = **in
	}
	if in.MetricIntervalUpperBound != nil {
		in, out := &in.MetricIntervalUpperBound, &out.MetricIntervalUpperBound
		*out = new(string)
		**out = **in
	}
	if in.ScalingAdjustment != nil {
		in, out := &in.ScalingAdjustment, &out.ScalingAdjustment
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingRuleSpecStepAdjustment.
func (in *ScalingRuleSpecStepAdjustment) DeepCopy() *ScalingRuleSpecStepAdjustment {
	if in == nil {
		return nil
	}
	out := new(ScalingRuleSpecStepAdjustment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingRuleStatus) DeepCopyInto(out *ScalingRuleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingRuleStatus.
func (in *ScalingRuleStatus) DeepCopy() *ScalingRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ScalingRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalinggroupVserverGroups) DeepCopyInto(out *ScalinggroupVserverGroups) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalinggroupVserverGroups.
func (in *ScalinggroupVserverGroups) DeepCopy() *ScalinggroupVserverGroups {
	if in == nil {
		return nil
	}
	out := new(ScalinggroupVserverGroups)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalinggroupVserverGroups) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalinggroupVserverGroupsList) DeepCopyInto(out *ScalinggroupVserverGroupsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScalinggroupVserverGroups, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalinggroupVserverGroupsList.
func (in *ScalinggroupVserverGroupsList) DeepCopy() *ScalinggroupVserverGroupsList {
	if in == nil {
		return nil
	}
	out := new(ScalinggroupVserverGroupsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalinggroupVserverGroupsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalinggroupVserverGroupsSpec) DeepCopyInto(out *ScalinggroupVserverGroupsSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ScalinggroupVserverGroupsSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalinggroupVserverGroupsSpec.
func (in *ScalinggroupVserverGroupsSpec) DeepCopy() *ScalinggroupVserverGroupsSpec {
	if in == nil {
		return nil
	}
	out := new(ScalinggroupVserverGroupsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalinggroupVserverGroupsSpecResource) DeepCopyInto(out *ScalinggroupVserverGroupsSpecResource) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ScalingGroupID != nil {
		in, out := &in.ScalingGroupID, &out.ScalingGroupID
		*out = new(string)
		**out = **in
	}
	if in.VserverGroups != nil {
		in, out := &in.VserverGroups, &out.VserverGroups
		*out = make([]ScalinggroupVserverGroupsSpecVserverGroups, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalinggroupVserverGroupsSpecResource.
func (in *ScalinggroupVserverGroupsSpecResource) DeepCopy() *ScalinggroupVserverGroupsSpecResource {
	if in == nil {
		return nil
	}
	out := new(ScalinggroupVserverGroupsSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalinggroupVserverGroupsSpecVserverGroups) DeepCopyInto(out *ScalinggroupVserverGroupsSpecVserverGroups) {
	*out = *in
	if in.LoadbalancerID != nil {
		in, out := &in.LoadbalancerID, &out.LoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.VserverAttributes != nil {
		in, out := &in.VserverAttributes, &out.VserverAttributes
		*out = make([]ScalinggroupVserverGroupsSpecVserverGroupsVserverAttributes, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalinggroupVserverGroupsSpecVserverGroups.
func (in *ScalinggroupVserverGroupsSpecVserverGroups) DeepCopy() *ScalinggroupVserverGroupsSpecVserverGroups {
	if in == nil {
		return nil
	}
	out := new(ScalinggroupVserverGroupsSpecVserverGroups)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalinggroupVserverGroupsSpecVserverGroupsVserverAttributes) DeepCopyInto(out *ScalinggroupVserverGroupsSpecVserverGroupsVserverAttributes) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.VserverGroupID != nil {
		in, out := &in.VserverGroupID, &out.VserverGroupID
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalinggroupVserverGroupsSpecVserverGroupsVserverAttributes.
func (in *ScalinggroupVserverGroupsSpecVserverGroupsVserverAttributes) DeepCopy() *ScalinggroupVserverGroupsSpecVserverGroupsVserverAttributes {
	if in == nil {
		return nil
	}
	out := new(ScalinggroupVserverGroupsSpecVserverGroupsVserverAttributes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalinggroupVserverGroupsStatus) DeepCopyInto(out *ScalinggroupVserverGroupsStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalinggroupVserverGroupsStatus.
func (in *ScalinggroupVserverGroupsStatus) DeepCopy() *ScalinggroupVserverGroupsStatus {
	if in == nil {
		return nil
	}
	out := new(ScalinggroupVserverGroupsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schedule) DeepCopyInto(out *Schedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schedule.
func (in *Schedule) DeepCopy() *Schedule {
	if in == nil {
		return nil
	}
	out := new(Schedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Schedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleList) DeepCopyInto(out *ScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Schedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleList.
func (in *ScheduleList) DeepCopy() *ScheduleList {
	if in == nil {
		return nil
	}
	out := new(ScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleSpec) DeepCopyInto(out *ScheduleSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ScheduleSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleSpec.
func (in *ScheduleSpec) DeepCopy() *ScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(ScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleSpecResource) DeepCopyInto(out *ScheduleSpecResource) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DesiredCapacity != nil {
		in, out := &in.DesiredCapacity, &out.DesiredCapacity
		*out = new(int64)
		**out = **in
	}
	if in.LaunchExpirationTime != nil {
		in, out := &in.LaunchExpirationTime, &out.LaunchExpirationTime
		*out = new(int64)
		**out = **in
	}
	if in.LaunchTime != nil {
		in, out := &in.LaunchTime, &out.LaunchTime
		*out = new(string)
		**out = **in
	}
	if in.MaxValue != nil {
		in, out := &in.MaxValue, &out.MaxValue
		*out = new(int64)
		**out = **in
	}
	if in.MinValue != nil {
		in, out := &in.MinValue, &out.MinValue
		*out = new(int64)
		**out = **in
	}
	if in.RecurrenceEndTime != nil {
		in, out := &in.RecurrenceEndTime, &out.RecurrenceEndTime
		*out = new(string)
		**out = **in
	}
	if in.RecurrenceType != nil {
		in, out := &in.RecurrenceType, &out.RecurrenceType
		*out = new(string)
		**out = **in
	}
	if in.RecurrenceValue != nil {
		in, out := &in.RecurrenceValue, &out.RecurrenceValue
		*out = new(string)
		**out = **in
	}
	if in.ScalingGroupID != nil {
		in, out := &in.ScalingGroupID, &out.ScalingGroupID
		*out = new(string)
		**out = **in
	}
	if in.ScheduledAction != nil {
		in, out := &in.ScheduledAction, &out.ScheduledAction
		*out = new(string)
		**out = **in
	}
	if in.ScheduledTaskName != nil {
		in, out := &in.ScheduledTaskName, &out.ScheduledTaskName
		*out = new(string)
		**out = **in
	}
	if in.TaskEnabled != nil {
		in, out := &in.TaskEnabled, &out.TaskEnabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleSpecResource.
func (in *ScheduleSpecResource) DeepCopy() *ScheduleSpecResource {
	if in == nil {
		return nil
	}
	out := new(ScheduleSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleStatus) DeepCopyInto(out *ScheduleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleStatus.
func (in *ScheduleStatus) DeepCopy() *ScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(ScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledTask) DeepCopyInto(out *ScheduledTask) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledTask.
func (in *ScheduledTask) DeepCopy() *ScheduledTask {
	if in == nil {
		return nil
	}
	out := new(ScheduledTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScheduledTask) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledTaskList) DeepCopyInto(out *ScheduledTaskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScheduledTask, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledTaskList.
func (in *ScheduledTaskList) DeepCopy() *ScheduledTaskList {
	if in == nil {
		return nil
	}
	out := new(ScheduledTaskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScheduledTaskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledTaskSpec) DeepCopyInto(out *ScheduledTaskSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ScheduledTaskSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledTaskSpec.
func (in *ScheduledTaskSpec) DeepCopy() *ScheduledTaskSpec {
	if in == nil {
		return nil
	}
	out := new(ScheduledTaskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledTaskSpecResource) DeepCopyInto(out *ScheduledTaskSpecResource) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DesiredCapacity != nil {
		in, out := &in.DesiredCapacity, &out.DesiredCapacity
		*out = new(int64)
		**out = **in
	}
	if in.LaunchExpirationTime != nil {
		in, out := &in.LaunchExpirationTime, &out.LaunchExpirationTime
		*out = new(int64)
		**out = **in
	}
	if in.LaunchTime != nil {
		in, out := &in.LaunchTime, &out.LaunchTime
		*out = new(string)
		**out = **in
	}
	if in.MaxValue != nil {
		in, out := &in.MaxValue, &out.MaxValue
		*out = new(int64)
		**out = **in
	}
	if in.MinValue != nil {
		in, out := &in.MinValue, &out.MinValue
		*out = new(int64)
		**out = **in
	}
	if in.RecurrenceEndTime != nil {
		in, out := &in.RecurrenceEndTime, &out.RecurrenceEndTime
		*out = new(string)
		**out = **in
	}
	if in.RecurrenceType != nil {
		in, out := &in.RecurrenceType, &out.RecurrenceType
		*out = new(string)
		**out = **in
	}
	if in.RecurrenceValue != nil {
		in, out := &in.RecurrenceValue, &out.RecurrenceValue
		*out = new(string)
		**out = **in
	}
	if in.ScalingGroupID != nil {
		in, out := &in.ScalingGroupID, &out.ScalingGroupID
		*out = new(string)
		**out = **in
	}
	if in.ScheduledAction != nil {
		in, out := &in.ScheduledAction, &out.ScheduledAction
		*out = new(string)
		**out = **in
	}
	if in.ScheduledTaskName != nil {
		in, out := &in.ScheduledTaskName, &out.ScheduledTaskName
		*out = new(string)
		**out = **in
	}
	if in.TaskEnabled != nil {
		in, out := &in.TaskEnabled, &out.TaskEnabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledTaskSpecResource.
func (in *ScheduledTaskSpecResource) DeepCopy() *ScheduledTaskSpecResource {
	if in == nil {
		return nil
	}
	out := new(ScheduledTaskSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledTaskStatus) DeepCopyInto(out *ScheduledTaskStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledTaskStatus.
func (in *ScheduledTaskStatus) DeepCopy() *ScheduledTaskStatus {
	if in == nil {
		return nil
	}
	out := new(ScheduledTaskStatus)
	in.DeepCopyInto(out)
	return out
}
