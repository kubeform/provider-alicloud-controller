/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type RouteMap struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RouteMapSpec   `json:"spec,omitempty"`
	Status            RouteMapStatus `json:"status,omitempty"`
}

type RouteMapSpec struct {
	State *RouteMapSpecResource `json:"state,omitempty" tf:"-"`

	Resource RouteMapSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type RouteMapSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AsPathMatchMode *string `json:"asPathMatchMode,omitempty" tf:"as_path_match_mode"`
	CenID           *string `json:"cenID" tf:"cen_id"`
	CenRegionID     *string `json:"cenRegionID" tf:"cen_region_id"`
	// +optional
	CidrMatchMode *string `json:"cidrMatchMode,omitempty" tf:"cidr_match_mode"`
	// +optional
	CommunityMatchMode *string `json:"communityMatchMode,omitempty" tf:"community_match_mode"`
	// +optional
	CommunityOperateMode *string `json:"communityOperateMode,omitempty" tf:"community_operate_mode"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DestinationChildInstanceTypes []string `json:"destinationChildInstanceTypes,omitempty" tf:"destination_child_instance_types"`
	// +optional
	DestinationCIDRBlocks []string `json:"destinationCIDRBlocks,omitempty" tf:"destination_cidr_blocks"`
	// +optional
	DestinationInstanceIDS []string `json:"destinationInstanceIDS,omitempty" tf:"destination_instance_ids"`
	// +optional
	DestinationInstanceIDSReverseMatch *bool `json:"destinationInstanceIDSReverseMatch,omitempty" tf:"destination_instance_ids_reverse_match"`
	// +optional
	DestinationRouteTableIDS []string `json:"destinationRouteTableIDS,omitempty" tf:"destination_route_table_ids"`
	MapResult                *string  `json:"mapResult" tf:"map_result"`
	// +optional
	MatchAsns []string `json:"matchAsns,omitempty" tf:"match_asns"`
	// +optional
	MatchCommunitySet []string `json:"matchCommunitySet,omitempty" tf:"match_community_set"`
	// +optional
	NextPriority *int64 `json:"nextPriority,omitempty" tf:"next_priority"`
	// +optional
	OperateCommunitySet []string `json:"operateCommunitySet,omitempty" tf:"operate_community_set"`
	// +optional
	Preference *int64 `json:"preference,omitempty" tf:"preference"`
	// +optional
	PrependAsPath []string `json:"prependAsPath,omitempty" tf:"prepend_as_path"`
	Priority      *int64   `json:"priority" tf:"priority"`
	// +optional
	RouteMapID *string `json:"routeMapID,omitempty" tf:"route_map_id"`
	// +optional
	RouteTypes []string `json:"routeTypes,omitempty" tf:"route_types"`
	// +optional
	SourceChildInstanceTypes []string `json:"sourceChildInstanceTypes,omitempty" tf:"source_child_instance_types"`
	// +optional
	SourceInstanceIDS []string `json:"sourceInstanceIDS,omitempty" tf:"source_instance_ids"`
	// +optional
	SourceInstanceIDSReverseMatch *bool `json:"sourceInstanceIDSReverseMatch,omitempty" tf:"source_instance_ids_reverse_match"`
	// +optional
	SourceRegionIDS []string `json:"sourceRegionIDS,omitempty" tf:"source_region_ids"`
	// +optional
	SourceRouteTableIDS []string `json:"sourceRouteTableIDS,omitempty" tf:"source_route_table_ids"`
	// +optional
	Status            *string `json:"status,omitempty" tf:"status"`
	TransmitDirection *string `json:"transmitDirection" tf:"transmit_direction"`
}

type RouteMapStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// RouteMapList is a list of RouteMaps
type RouteMapList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of RouteMap CRD objects
	Items []RouteMap `json:"items,omitempty"`
}
