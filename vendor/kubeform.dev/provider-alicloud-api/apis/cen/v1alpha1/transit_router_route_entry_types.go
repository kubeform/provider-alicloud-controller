/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type TransitRouterRouteEntry struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TransitRouterRouteEntrySpec   `json:"spec,omitempty"`
	Status            TransitRouterRouteEntryStatus `json:"status,omitempty"`
}

type TransitRouterRouteEntrySpec struct {
	State *TransitRouterRouteEntrySpecResource `json:"state,omitempty" tf:"-"`

	Resource TransitRouterRouteEntrySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type TransitRouterRouteEntrySpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	TransitRouterRouteEntryDescription          *string `json:"transitRouterRouteEntryDescription,omitempty" tf:"transit_router_route_entry_description"`
	TransitRouterRouteEntryDestinationCIDRBlock *string `json:"transitRouterRouteEntryDestinationCIDRBlock" tf:"transit_router_route_entry_destination_cidr_block"`
	// +optional
	TransitRouterRouteEntryID *string `json:"transitRouterRouteEntryID,omitempty" tf:"transit_router_route_entry_id"`
	// +optional
	TransitRouterRouteEntryName *string `json:"transitRouterRouteEntryName,omitempty" tf:"transit_router_route_entry_name"`
	// +optional
	TransitRouterRouteEntryNextHopID   *string `json:"transitRouterRouteEntryNextHopID,omitempty" tf:"transit_router_route_entry_next_hop_id"`
	TransitRouterRouteEntryNextHopType *string `json:"transitRouterRouteEntryNextHopType" tf:"transit_router_route_entry_next_hop_type"`
	TransitRouterRouteTableID          *string `json:"transitRouterRouteTableID" tf:"transit_router_route_table_id"`
}

type TransitRouterRouteEntryStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// TransitRouterRouteEntryList is a list of TransitRouterRouteEntrys
type TransitRouterRouteEntryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of TransitRouterRouteEntry CRD objects
	Items []TransitRouterRouteEntry `json:"items,omitempty"`
}
