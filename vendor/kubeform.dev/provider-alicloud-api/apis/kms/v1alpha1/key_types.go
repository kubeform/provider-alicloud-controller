/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Key struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              KeySpec   `json:"spec,omitempty"`
	Status            KeyStatus `json:"status,omitempty"`
}

type KeySpec struct {
	State *KeySpecResource `json:"state,omitempty" tf:"-"`

	Resource KeySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type KeySpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	AutomaticRotation *string `json:"automaticRotation,omitempty" tf:"automatic_rotation"`
	// +optional
	CreationDate *string `json:"creationDate,omitempty" tf:"creation_date"`
	// +optional
	Creator *string `json:"creator,omitempty" tf:"creator"`
	// +optional
	DeleteDate *string `json:"deleteDate,omitempty" tf:"delete_date"`
	// +optional
	// Deprecated
	DeletionWindowInDays *int64 `json:"deletionWindowInDays,omitempty" tf:"deletion_window_in_days"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	// Deprecated
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled"`
	// +optional
	KeySpec *string `json:"keySpec,omitempty" tf:"key_spec"`
	// +optional
	// Deprecated
	KeyState *string `json:"keyState,omitempty" tf:"key_state"`
	// +optional
	KeyUsage *string `json:"keyUsage,omitempty" tf:"key_usage"`
	// +optional
	LastRotationDate *string `json:"lastRotationDate,omitempty" tf:"last_rotation_date"`
	// +optional
	MaterialExpireTime *string `json:"materialExpireTime,omitempty" tf:"material_expire_time"`
	// +optional
	NextRotationDate *string `json:"nextRotationDate,omitempty" tf:"next_rotation_date"`
	// +optional
	Origin *string `json:"origin,omitempty" tf:"origin"`
	// +optional
	PendingWindowInDays *int64 `json:"pendingWindowInDays,omitempty" tf:"pending_window_in_days"`
	// +optional
	PrimaryKeyVersion *string `json:"primaryKeyVersion,omitempty" tf:"primary_key_version"`
	// +optional
	ProtectionLevel *string `json:"protectionLevel,omitempty" tf:"protection_level"`
	// +optional
	RotationInterval *string `json:"rotationInterval,omitempty" tf:"rotation_interval"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
}

type KeyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// KeyList is a list of Keys
type KeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Key CRD objects
	Items []Key `json:"items,omitempty"`
}
