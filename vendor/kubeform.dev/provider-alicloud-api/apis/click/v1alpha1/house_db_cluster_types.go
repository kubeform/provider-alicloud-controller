/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type HouseDbCluster struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HouseDbClusterSpec   `json:"spec,omitempty"`
	Status            HouseDbClusterStatus `json:"status,omitempty"`
}

type HouseDbClusterSpecDbClusterAccessWhiteList struct {
	// +optional
	DbClusterIPArrayAttribute *string `json:"dbClusterIPArrayAttribute,omitempty" tf:"db_cluster_ip_array_attribute"`
	// +optional
	DbClusterIPArrayName *string `json:"dbClusterIPArrayName,omitempty" tf:"db_cluster_ip_array_name"`
	// +optional
	SecurityIPList *string `json:"securityIPList,omitempty" tf:"security_ip_list"`
}

type HouseDbClusterSpec struct {
	State *HouseDbClusterSpecResource `json:"state,omitempty" tf:"-"`

	Resource HouseDbClusterSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type HouseDbClusterSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Category *string `json:"category" tf:"category"`
	// +optional
	DbClusterAccessWhiteList []HouseDbClusterSpecDbClusterAccessWhiteList `json:"dbClusterAccessWhiteList,omitempty" tf:"db_cluster_access_white_list"`
	DbClusterClass           *string                                      `json:"dbClusterClass" tf:"db_cluster_class"`
	// +optional
	DbClusterDescription *string `json:"dbClusterDescription,omitempty" tf:"db_cluster_description"`
	DbClusterNetworkType *string `json:"dbClusterNetworkType" tf:"db_cluster_network_type"`
	DbClusterVersion     *string `json:"dbClusterVersion" tf:"db_cluster_version"`
	DbNodeGroupCount     *int64  `json:"dbNodeGroupCount" tf:"db_node_group_count"`
	DbNodeStorage        *string `json:"dbNodeStorage" tf:"db_node_storage"`
	// +optional
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key"`
	// +optional
	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type"`
	// +optional
	MaintainTime *string `json:"maintainTime,omitempty" tf:"maintain_time"`
	PaymentType  *string `json:"paymentType" tf:"payment_type"`
	// +optional
	Period *string `json:"period,omitempty" tf:"period"`
	// +optional
	Status      *string `json:"status,omitempty" tf:"status"`
	StorageType *string `json:"storageType" tf:"storage_type"`
	// +optional
	UsedTime *string `json:"usedTime,omitempty" tf:"used_time"`
	// +optional
	VswitchID *string `json:"vswitchID,omitempty" tf:"vswitch_id"`
}

type HouseDbClusterStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// HouseDbClusterList is a list of HouseDbClusters
type HouseDbClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of HouseDbCluster CRD objects
	Items []HouseDbCluster `json:"items,omitempty"`
}
