//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroup) DeepCopyInto(out *ContainerGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroup.
func (in *ContainerGroup) DeepCopy() *ContainerGroup {
	if in == nil {
		return nil
	}
	out := new(ContainerGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ContainerGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupList) DeepCopyInto(out *ContainerGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ContainerGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupList.
func (in *ContainerGroupList) DeepCopy() *ContainerGroupList {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ContainerGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpec) DeepCopyInto(out *ContainerGroupSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ContainerGroupSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpec.
func (in *ContainerGroupSpec) DeepCopy() *ContainerGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecContainers) DeepCopyInto(out *ContainerGroupSpecContainers) {
	*out = *in
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Cpu != nil {
		in, out := &in.Cpu, &out.Cpu
		*out = new(float64)
		**out = **in
	}
	if in.EnvironmentVars != nil {
		in, out := &in.EnvironmentVars, &out.EnvironmentVars
		*out = make([]ContainerGroupSpecContainersEnvironmentVars, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = new(int64)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]ContainerGroupSpecContainersPorts, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ready != nil {
		in, out := &in.Ready, &out.Ready
		*out = new(bool)
		**out = **in
	}
	if in.RestartCount != nil {
		in, out := &in.RestartCount, &out.RestartCount
		*out = new(int64)
		**out = **in
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]ContainerGroupSpecContainersVolumeMounts, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkingDir != nil {
		in, out := &in.WorkingDir, &out.WorkingDir
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecContainers.
func (in *ContainerGroupSpecContainers) DeepCopy() *ContainerGroupSpecContainers {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecContainers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecContainersEnvironmentVars) DeepCopyInto(out *ContainerGroupSpecContainersEnvironmentVars) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecContainersEnvironmentVars.
func (in *ContainerGroupSpecContainersEnvironmentVars) DeepCopy() *ContainerGroupSpecContainersEnvironmentVars {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecContainersEnvironmentVars)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecContainersPorts) DeepCopyInto(out *ContainerGroupSpecContainersPorts) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecContainersPorts.
func (in *ContainerGroupSpecContainersPorts) DeepCopy() *ContainerGroupSpecContainersPorts {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecContainersPorts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecContainersVolumeMounts) DeepCopyInto(out *ContainerGroupSpecContainersVolumeMounts) {
	*out = *in
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecContainersVolumeMounts.
func (in *ContainerGroupSpecContainersVolumeMounts) DeepCopy() *ContainerGroupSpecContainersVolumeMounts {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecContainersVolumeMounts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecDnsConfig) DeepCopyInto(out *ContainerGroupSpecDnsConfig) {
	*out = *in
	if in.NameServers != nil {
		in, out := &in.NameServers, &out.NameServers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]ContainerGroupSpecDnsConfigOptions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Searches != nil {
		in, out := &in.Searches, &out.Searches
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecDnsConfig.
func (in *ContainerGroupSpecDnsConfig) DeepCopy() *ContainerGroupSpecDnsConfig {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecDnsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecDnsConfigOptions) DeepCopyInto(out *ContainerGroupSpecDnsConfigOptions) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecDnsConfigOptions.
func (in *ContainerGroupSpecDnsConfigOptions) DeepCopy() *ContainerGroupSpecDnsConfigOptions {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecDnsConfigOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecEciSecurityContext) DeepCopyInto(out *ContainerGroupSpecEciSecurityContext) {
	*out = *in
	if in.Sysctls != nil {
		in, out := &in.Sysctls, &out.Sysctls
		*out = make([]ContainerGroupSpecEciSecurityContextSysctls, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecEciSecurityContext.
func (in *ContainerGroupSpecEciSecurityContext) DeepCopy() *ContainerGroupSpecEciSecurityContext {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecEciSecurityContext)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecEciSecurityContextSysctls) DeepCopyInto(out *ContainerGroupSpecEciSecurityContextSysctls) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecEciSecurityContextSysctls.
func (in *ContainerGroupSpecEciSecurityContextSysctls) DeepCopy() *ContainerGroupSpecEciSecurityContextSysctls {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecEciSecurityContextSysctls)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecHostAliases) DeepCopyInto(out *ContainerGroupSpecHostAliases) {
	*out = *in
	if in.Hostnames != nil {
		in, out := &in.Hostnames, &out.Hostnames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Ip != nil {
		in, out := &in.Ip, &out.Ip
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecHostAliases.
func (in *ContainerGroupSpecHostAliases) DeepCopy() *ContainerGroupSpecHostAliases {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecHostAliases)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecInitContainers) DeepCopyInto(out *ContainerGroupSpecInitContainers) {
	*out = *in
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Cpu != nil {
		in, out := &in.Cpu, &out.Cpu
		*out = new(float64)
		**out = **in
	}
	if in.EnvironmentVars != nil {
		in, out := &in.EnvironmentVars, &out.EnvironmentVars
		*out = make([]ContainerGroupSpecInitContainersEnvironmentVars, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = new(int64)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]ContainerGroupSpecInitContainersPorts, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ready != nil {
		in, out := &in.Ready, &out.Ready
		*out = new(bool)
		**out = **in
	}
	if in.RestartCount != nil {
		in, out := &in.RestartCount, &out.RestartCount
		*out = new(int64)
		**out = **in
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]ContainerGroupSpecInitContainersVolumeMounts, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkingDir != nil {
		in, out := &in.WorkingDir, &out.WorkingDir
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecInitContainers.
func (in *ContainerGroupSpecInitContainers) DeepCopy() *ContainerGroupSpecInitContainers {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecInitContainers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecInitContainersEnvironmentVars) DeepCopyInto(out *ContainerGroupSpecInitContainersEnvironmentVars) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecInitContainersEnvironmentVars.
func (in *ContainerGroupSpecInitContainersEnvironmentVars) DeepCopy() *ContainerGroupSpecInitContainersEnvironmentVars {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecInitContainersEnvironmentVars)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecInitContainersPorts) DeepCopyInto(out *ContainerGroupSpecInitContainersPorts) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecInitContainersPorts.
func (in *ContainerGroupSpecInitContainersPorts) DeepCopy() *ContainerGroupSpecInitContainersPorts {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecInitContainersPorts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecInitContainersVolumeMounts) DeepCopyInto(out *ContainerGroupSpecInitContainersVolumeMounts) {
	*out = *in
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecInitContainersVolumeMounts.
func (in *ContainerGroupSpecInitContainersVolumeMounts) DeepCopy() *ContainerGroupSpecInitContainersVolumeMounts {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecInitContainersVolumeMounts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecResource) DeepCopyInto(out *ContainerGroupSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerGroupName != nil {
		in, out := &in.ContainerGroupName, &out.ContainerGroupName
		*out = new(string)
		**out = **in
	}
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]ContainerGroupSpecContainers, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cpu != nil {
		in, out := &in.Cpu, &out.Cpu
		*out = new(float64)
		**out = **in
	}
	if in.DnsConfig != nil {
		in, out := &in.DnsConfig, &out.DnsConfig
		*out = new(ContainerGroupSpecDnsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.EciSecurityContext != nil {
		in, out := &in.EciSecurityContext, &out.EciSecurityContext
		*out = new(ContainerGroupSpecEciSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	if in.HostAliases != nil {
		in, out := &in.HostAliases, &out.HostAliases
		*out = make([]ContainerGroupSpecHostAliases, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitContainers != nil {
		in, out := &in.InitContainers, &out.InitContainers
		*out = make([]ContainerGroupSpecInitContainers, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.RamRoleName != nil {
		in, out := &in.RamRoleName, &out.RamRoleName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.RestartPolicy != nil {
		in, out := &in.RestartPolicy, &out.RestartPolicy
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]ContainerGroupSpecVolumes, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VswitchID != nil {
		in, out := &in.VswitchID, &out.VswitchID
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecResource.
func (in *ContainerGroupSpecResource) DeepCopy() *ContainerGroupSpecResource {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecVolumes) DeepCopyInto(out *ContainerGroupSpecVolumes) {
	*out = *in
	if in.ConfigFileVolumeConfigFileToPaths != nil {
		in, out := &in.ConfigFileVolumeConfigFileToPaths, &out.ConfigFileVolumeConfigFileToPaths
		*out = make([]ContainerGroupSpecVolumesConfigFileVolumeConfigFileToPaths, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskVolumeDiskID != nil {
		in, out := &in.DiskVolumeDiskID, &out.DiskVolumeDiskID
		*out = new(string)
		**out = **in
	}
	if in.DiskVolumeFsType != nil {
		in, out := &in.DiskVolumeFsType, &out.DiskVolumeFsType
		*out = new(string)
		**out = **in
	}
	if in.FlexVolumeDriver != nil {
		in, out := &in.FlexVolumeDriver, &out.FlexVolumeDriver
		*out = new(string)
		**out = **in
	}
	if in.FlexVolumeFsType != nil {
		in, out := &in.FlexVolumeFsType, &out.FlexVolumeFsType
		*out = new(string)
		**out = **in
	}
	if in.FlexVolumeOptions != nil {
		in, out := &in.FlexVolumeOptions, &out.FlexVolumeOptions
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NfsVolumePath != nil {
		in, out := &in.NfsVolumePath, &out.NfsVolumePath
		*out = new(string)
		**out = **in
	}
	if in.NfsVolumeReadOnly != nil {
		in, out := &in.NfsVolumeReadOnly, &out.NfsVolumeReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.NfsVolumeServer != nil {
		in, out := &in.NfsVolumeServer, &out.NfsVolumeServer
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecVolumes.
func (in *ContainerGroupSpecVolumes) DeepCopy() *ContainerGroupSpecVolumes {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecVolumes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupSpecVolumesConfigFileVolumeConfigFileToPaths) DeepCopyInto(out *ContainerGroupSpecVolumesConfigFileVolumeConfigFileToPaths) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupSpecVolumesConfigFileVolumeConfigFileToPaths.
func (in *ContainerGroupSpecVolumesConfigFileVolumeConfigFileToPaths) DeepCopy() *ContainerGroupSpecVolumesConfigFileVolumeConfigFileToPaths {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupSpecVolumesConfigFileVolumeConfigFileToPaths)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerGroupStatus) DeepCopyInto(out *ContainerGroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerGroupStatus.
func (in *ContainerGroupStatus) DeepCopy() *ContainerGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ContainerGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageCache) DeepCopyInto(out *ImageCache) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageCache.
func (in *ImageCache) DeepCopy() *ImageCache {
	if in == nil {
		return nil
	}
	out := new(ImageCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ImageCache) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageCacheList) DeepCopyInto(out *ImageCacheList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ImageCache, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageCacheList.
func (in *ImageCacheList) DeepCopy() *ImageCacheList {
	if in == nil {
		return nil
	}
	out := new(ImageCacheList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ImageCacheList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageCacheSpec) DeepCopyInto(out *ImageCacheSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ImageCacheSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageCacheSpec.
func (in *ImageCacheSpec) DeepCopy() *ImageCacheSpec {
	if in == nil {
		return nil
	}
	out := new(ImageCacheSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageCacheSpecImageRegistryCredential) DeepCopyInto(out *ImageCacheSpecImageRegistryCredential) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageCacheSpecImageRegistryCredential.
func (in *ImageCacheSpecImageRegistryCredential) DeepCopy() *ImageCacheSpecImageRegistryCredential {
	if in == nil {
		return nil
	}
	out := new(ImageCacheSpecImageRegistryCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageCacheSpecResource) DeepCopyInto(out *ImageCacheSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerGroupID != nil {
		in, out := &in.ContainerGroupID, &out.ContainerGroupID
		*out = new(string)
		**out = **in
	}
	if in.EipInstanceID != nil {
		in, out := &in.EipInstanceID, &out.EipInstanceID
		*out = new(string)
		**out = **in
	}
	if in.ImageCacheName != nil {
		in, out := &in.ImageCacheName, &out.ImageCacheName
		*out = new(string)
		**out = **in
	}
	if in.ImageCacheSize != nil {
		in, out := &in.ImageCacheSize, &out.ImageCacheSize
		*out = new(int64)
		**out = **in
	}
	if in.ImageRegistryCredential != nil {
		in, out := &in.ImageRegistryCredential, &out.ImageRegistryCredential
		*out = make([]ImageCacheSpecImageRegistryCredential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(int64)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.VswitchID != nil {
		in, out := &in.VswitchID, &out.VswitchID
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageCacheSpecResource.
func (in *ImageCacheSpecResource) DeepCopy() *ImageCacheSpecResource {
	if in == nil {
		return nil
	}
	out := new(ImageCacheSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageCacheStatus) DeepCopyInto(out *ImageCacheStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageCacheStatus.
func (in *ImageCacheStatus) DeepCopy() *ImageCacheStatus {
	if in == nil {
		return nil
	}
	out := new(ImageCacheStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenapiImageCache) DeepCopyInto(out *OpenapiImageCache) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenapiImageCache.
func (in *OpenapiImageCache) DeepCopy() *OpenapiImageCache {
	if in == nil {
		return nil
	}
	out := new(OpenapiImageCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenapiImageCache) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenapiImageCacheList) DeepCopyInto(out *OpenapiImageCacheList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OpenapiImageCache, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenapiImageCacheList.
func (in *OpenapiImageCacheList) DeepCopy() *OpenapiImageCacheList {
	if in == nil {
		return nil
	}
	out := new(OpenapiImageCacheList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenapiImageCacheList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenapiImageCacheSpec) DeepCopyInto(out *OpenapiImageCacheSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(OpenapiImageCacheSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenapiImageCacheSpec.
func (in *OpenapiImageCacheSpec) DeepCopy() *OpenapiImageCacheSpec {
	if in == nil {
		return nil
	}
	out := new(OpenapiImageCacheSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenapiImageCacheSpecImageRegistryCredential) DeepCopyInto(out *OpenapiImageCacheSpecImageRegistryCredential) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenapiImageCacheSpecImageRegistryCredential.
func (in *OpenapiImageCacheSpecImageRegistryCredential) DeepCopy() *OpenapiImageCacheSpecImageRegistryCredential {
	if in == nil {
		return nil
	}
	out := new(OpenapiImageCacheSpecImageRegistryCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenapiImageCacheSpecResource) DeepCopyInto(out *OpenapiImageCacheSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerGroupID != nil {
		in, out := &in.ContainerGroupID, &out.ContainerGroupID
		*out = new(string)
		**out = **in
	}
	if in.EipInstanceID != nil {
		in, out := &in.EipInstanceID, &out.EipInstanceID
		*out = new(string)
		**out = **in
	}
	if in.ImageCacheName != nil {
		in, out := &in.ImageCacheName, &out.ImageCacheName
		*out = new(string)
		**out = **in
	}
	if in.ImageCacheSize != nil {
		in, out := &in.ImageCacheSize, &out.ImageCacheSize
		*out = new(int64)
		**out = **in
	}
	if in.ImageRegistryCredential != nil {
		in, out := &in.ImageRegistryCredential, &out.ImageRegistryCredential
		*out = make([]OpenapiImageCacheSpecImageRegistryCredential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(int64)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.VswitchID != nil {
		in, out := &in.VswitchID, &out.VswitchID
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenapiImageCacheSpecResource.
func (in *OpenapiImageCacheSpecResource) DeepCopy() *OpenapiImageCacheSpecResource {
	if in == nil {
		return nil
	}
	out := new(OpenapiImageCacheSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenapiImageCacheStatus) DeepCopyInto(out *OpenapiImageCacheStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenapiImageCacheStatus.
func (in *OpenapiImageCacheStatus) DeepCopy() *OpenapiImageCacheStatus {
	if in == nil {
		return nil
	}
	out := new(OpenapiImageCacheStatus)
	in.DeepCopyInto(out)
	return out
}
