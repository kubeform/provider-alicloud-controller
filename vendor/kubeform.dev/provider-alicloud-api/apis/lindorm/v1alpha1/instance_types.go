/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Instance struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstanceSpec   `json:"spec,omitempty"`
	Status            InstanceStatus `json:"status,omitempty"`
}

type InstanceSpec struct {
	State *InstanceSpecResource `json:"state,omitempty" tf:"-"`

	Resource InstanceSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type InstanceSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	ColdStorage *int64 `json:"coldStorage,omitempty" tf:"cold_storage"`
	// +optional
	CoreNum *int64 `json:"coreNum,omitempty" tf:"core_num"`
	// +optional
	CoreSpec *string `json:"coreSpec,omitempty" tf:"core_spec"`
	// +optional
	DeletionProection *bool   `json:"deletionProection,omitempty" tf:"deletion_proection"`
	DiskCategory      *string `json:"diskCategory" tf:"disk_category"`
	// +optional
	Duration *string `json:"duration,omitempty" tf:"duration"`
	// +optional
	FileEngineNodeCount *int64 `json:"fileEngineNodeCount,omitempty" tf:"file_engine_node_count"`
	// +optional
	FileEngineSpecification *string `json:"fileEngineSpecification,omitempty" tf:"file_engine_specification"`
	// +optional
	GroupName *string `json:"groupName,omitempty" tf:"group_name"`
	// +optional
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name"`
	// +optional
	InstanceStorage *string `json:"instanceStorage,omitempty" tf:"instance_storage"`
	// +optional
	IpWhiteList []string `json:"ipWhiteList,omitempty" tf:"ip_white_list"`
	// +optional
	LtsNodeCount *int64 `json:"ltsNodeCount,omitempty" tf:"lts_node_count"`
	// +optional
	LtsNodeSpecification *string `json:"ltsNodeSpecification,omitempty" tf:"lts_node_specification"`
	PaymentType          *string `json:"paymentType" tf:"payment_type"`
	// +optional
	PhoenixNodeCount *int64 `json:"phoenixNodeCount,omitempty" tf:"phoenix_node_count"`
	// +optional
	PhoenixNodeSpecification *string `json:"phoenixNodeSpecification,omitempty" tf:"phoenix_node_specification"`
	// +optional
	PricingCycle *string `json:"pricingCycle,omitempty" tf:"pricing_cycle"`
	// +optional
	SearchEngineNodeCount *int64 `json:"searchEngineNodeCount,omitempty" tf:"search_engine_node_count"`
	// +optional
	SearchEngineSpecification *string `json:"searchEngineSpecification,omitempty" tf:"search_engine_specification"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	TableEngineNodeCount *int64 `json:"tableEngineNodeCount,omitempty" tf:"table_engine_node_count"`
	// +optional
	TableEngineSpecification *string `json:"tableEngineSpecification,omitempty" tf:"table_engine_specification"`
	// +optional
	TimeSeriesEngineNodeCount *int64 `json:"timeSeriesEngineNodeCount,omitempty" tf:"time_series_engine_node_count"`
	// +optional
	TimeSeriresEngineSpecification *string `json:"timeSeriresEngineSpecification,omitempty" tf:"time_serires_engine_specification"`
	// +optional
	UpgradeType *string `json:"upgradeType,omitempty" tf:"upgrade_type"`
	VswitchID   *string `json:"vswitchID" tf:"vswitch_id"`
	// +optional
	ZoneID *string `json:"zoneID,omitempty" tf:"zone_id"`
}

type InstanceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// InstanceList is a list of Instances
type InstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Instance CRD objects
	Items []Instance `json:"items,omitempty"`
}
