/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ServerlessInstance struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServerlessInstanceSpec   `json:"spec,omitempty"`
	Status            ServerlessInstanceStatus `json:"status,omitempty"`
}

type ServerlessInstanceSpecSecurityIPGroups struct {
	// +optional
	SecurityIPGroupAttribute *string `json:"securityIPGroupAttribute,omitempty" tf:"security_ip_group_attribute"`
	// +optional
	SecurityIPGroupName *string `json:"securityIPGroupName,omitempty" tf:"security_ip_group_name"`
	// +optional
	SecurityIPList *string `json:"securityIPList,omitempty" tf:"security_ip_list"`
}

type ServerlessInstanceSpec struct {
	State *ServerlessInstanceSpecResource `json:"state,omitempty" tf:"-"`

	Resource ServerlessInstanceSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ServerlessInstanceSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AccountPassword *string `json:"-" sensitive:"true" tf:"account_password"`
	// +optional
	AutoRenew    *bool  `json:"autoRenew,omitempty" tf:"auto_renew"`
	CapacityUnit *int64 `json:"capacityUnit" tf:"capacity_unit"`
	// +optional
	DbInstanceDescription *string `json:"dbInstanceDescription,omitempty" tf:"db_instance_description"`
	DbInstanceStorage     *int64  `json:"dbInstanceStorage" tf:"db_instance_storage"`
	// +optional
	Engine        *string `json:"engine,omitempty" tf:"engine"`
	EngineVersion *string `json:"engineVersion" tf:"engine_version"`
	// +optional
	MaintainEndTime *string `json:"maintainEndTime,omitempty" tf:"maintain_end_time"`
	// +optional
	MaintainStartTime *string `json:"maintainStartTime,omitempty" tf:"maintain_start_time"`
	// +optional
	Period *int64 `json:"period,omitempty" tf:"period"`
	// +optional
	PeriodPriceType *string `json:"periodPriceType,omitempty" tf:"period_price_type"`
	// +optional
	ResourceGroupID *string `json:"resourceGroupID,omitempty" tf:"resource_group_id"`
	// +optional
	SecurityIPGroups []ServerlessInstanceSpecSecurityIPGroups `json:"securityIPGroups,omitempty" tf:"security_ip_groups"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	StorageEngine *string `json:"storageEngine,omitempty" tf:"storage_engine"`
	// +optional
	Tags      map[string]string `json:"tags,omitempty" tf:"tags"`
	VpcID     *string           `json:"vpcID" tf:"vpc_id"`
	VswitchID *string           `json:"vswitchID" tf:"vswitch_id"`
	ZoneID    *string           `json:"zoneID" tf:"zone_id"`
}

type ServerlessInstanceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ServerlessInstanceList is a list of ServerlessInstances
type ServerlessInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ServerlessInstance CRD objects
	Items []ServerlessInstance `json:"items,omitempty"`
}
