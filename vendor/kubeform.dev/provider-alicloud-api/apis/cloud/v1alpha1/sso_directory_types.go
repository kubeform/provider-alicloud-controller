/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SsoDirectory struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SsoDirectorySpec   `json:"spec,omitempty"`
	Status            SsoDirectoryStatus `json:"status,omitempty"`
}

type SsoDirectorySpecSamlIdentityProviderConfiguration struct {
	// +optional
	EncodedMetadataDocument *string `json:"-" sensitive:"true" tf:"encoded_metadata_document"`
	// +optional
	SsoStatus *string `json:"ssoStatus,omitempty" tf:"sso_status"`
}

type SsoDirectorySpec struct {
	State *SsoDirectorySpecResource `json:"state,omitempty" tf:"-"`

	Resource SsoDirectorySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type SsoDirectorySpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	DirectoryName *string `json:"directoryName,omitempty" tf:"directory_name"`
	// +optional
	MfaAuthenticationStatus *string `json:"mfaAuthenticationStatus,omitempty" tf:"mfa_authentication_status"`
	// +optional
	SamlIdentityProviderConfiguration *SsoDirectorySpecSamlIdentityProviderConfiguration `json:"samlIdentityProviderConfiguration,omitempty" tf:"saml_identity_provider_configuration"`
	// +optional
	ScimSynchronizationStatus *string `json:"scimSynchronizationStatus,omitempty" tf:"scim_synchronization_status"`
}

type SsoDirectoryStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SsoDirectoryList is a list of SsoDirectorys
type SsoDirectoryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SsoDirectory CRD objects
	Items []SsoDirectory `json:"items,omitempty"`
}
