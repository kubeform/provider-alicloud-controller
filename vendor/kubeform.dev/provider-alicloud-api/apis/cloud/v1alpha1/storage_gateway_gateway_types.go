/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type StorageGatewayGateway struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              StorageGatewayGatewaySpec   `json:"spec,omitempty"`
	Status            StorageGatewayGatewayStatus `json:"status,omitempty"`
}

type StorageGatewayGatewaySpec struct {
	State *StorageGatewayGatewaySpecResource `json:"state,omitempty" tf:"-"`

	Resource StorageGatewayGatewaySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type StorageGatewayGatewaySpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	GatewayClass *string `json:"gatewayClass,omitempty" tf:"gateway_class"`
	GatewayName  *string `json:"gatewayName" tf:"gateway_name"`
	Location     *string `json:"location" tf:"location"`
	// +optional
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type"`
	// +optional
	PublicNetworkBandwidth *int64 `json:"publicNetworkBandwidth,omitempty" tf:"public_network_bandwidth"`
	// +optional
	ReasonDetail *string `json:"reasonDetail,omitempty" tf:"reason_detail"`
	// +optional
	ReasonType *string `json:"reasonType,omitempty" tf:"reason_type"`
	// +optional
	ReleaseAfterExpiration *bool `json:"releaseAfterExpiration,omitempty" tf:"release_after_expiration"`
	// +optional
	Status          *string `json:"status,omitempty" tf:"status"`
	StorageBundleID *string `json:"storageBundleID" tf:"storage_bundle_id"`
	Type            *string `json:"type" tf:"type"`
	// +optional
	VswitchID *string `json:"vswitchID,omitempty" tf:"vswitch_id"`
}

type StorageGatewayGatewayStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// StorageGatewayGatewayList is a list of StorageGatewayGateways
type StorageGatewayGatewayList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of StorageGatewayGateway CRD objects
	Items []StorageGatewayGateway `json:"items,omitempty"`
}
