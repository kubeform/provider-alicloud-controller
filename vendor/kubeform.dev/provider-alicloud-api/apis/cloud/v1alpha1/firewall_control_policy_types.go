/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type FirewallControlPolicy struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FirewallControlPolicySpec   `json:"spec,omitempty"`
	Status            FirewallControlPolicyStatus `json:"status,omitempty"`
}

type FirewallControlPolicySpec struct {
	State *FirewallControlPolicySpecResource `json:"state,omitempty" tf:"-"`

	Resource FirewallControlPolicySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type FirewallControlPolicySpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AclAction *string `json:"aclAction" tf:"acl_action"`
	// +optional
	AclUUID         *string `json:"aclUUID,omitempty" tf:"acl_uuid"`
	ApplicationName *string `json:"applicationName" tf:"application_name"`
	Description     *string `json:"description" tf:"description"`
	// +optional
	DestPort *string `json:"destPort,omitempty" tf:"dest_port"`
	// +optional
	DestPortGroup *string `json:"destPortGroup,omitempty" tf:"dest_port_group"`
	// +optional
	DestPortType    *string `json:"destPortType,omitempty" tf:"dest_port_type"`
	Destination     *string `json:"destination" tf:"destination"`
	DestinationType *string `json:"destinationType" tf:"destination_type"`
	Direction       *string `json:"direction" tf:"direction"`
	// +optional
	IpVersion *string `json:"ipVersion,omitempty" tf:"ip_version"`
	// +optional
	Lang  *string `json:"lang,omitempty" tf:"lang"`
	Proto *string `json:"proto" tf:"proto"`
	// +optional
	Release *string `json:"release,omitempty" tf:"release"`
	Source  *string `json:"source" tf:"source"`
	// +optional
	SourceIP   *string `json:"sourceIP,omitempty" tf:"source_ip"`
	SourceType *string `json:"sourceType" tf:"source_type"`
}

type FirewallControlPolicyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// FirewallControlPolicyList is a list of FirewallControlPolicys
type FirewallControlPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of FirewallControlPolicy CRD objects
	Items []FirewallControlPolicy `json:"items,omitempty"`
}
