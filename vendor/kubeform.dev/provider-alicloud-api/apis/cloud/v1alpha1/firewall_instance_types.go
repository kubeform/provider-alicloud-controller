/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type FirewallInstance struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FirewallInstanceSpec   `json:"spec,omitempty"`
	Status            FirewallInstanceStatus `json:"status,omitempty"`
}

type FirewallInstanceSpec struct {
	State *FirewallInstanceSpecResource `json:"state,omitempty" tf:"-"`

	Resource FirewallInstanceSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type FirewallInstanceSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	BandWidth     *int64 `json:"bandWidth" tf:"band_width"`
	CfwLog        *bool  `json:"cfwLog" tf:"cfw_log"`
	CfwLogStorage *int64 `json:"cfwLogStorage" tf:"cfw_log_storage"`
	CfwService    *bool  `json:"cfwService" tf:"cfw_service"`
	// +optional
	CreateTime *string `json:"createTime,omitempty" tf:"create_time"`
	// +optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time"`
	// +optional
	FwVpcNumber *int64 `json:"fwVpcNumber,omitempty" tf:"fw_vpc_number"`
	// +optional
	InstanceCount *int64 `json:"instanceCount,omitempty" tf:"instance_count"`
	IpNumber      *int64 `json:"ipNumber" tf:"ip_number"`
	// +optional
	Logistics *string `json:"logistics,omitempty" tf:"logistics"`
	// +optional
	ModifyType  *string `json:"modifyType,omitempty" tf:"modify_type"`
	PaymentType *string `json:"paymentType" tf:"payment_type"`
	Period      *int64  `json:"period" tf:"period"`
	// +optional
	ReleaseTime *string `json:"releaseTime,omitempty" tf:"release_time"`
	// +optional
	RenewPeriod *int64 `json:"renewPeriod,omitempty" tf:"renew_period"`
	// +optional
	RenewalDurationUnit *string `json:"renewalDurationUnit,omitempty" tf:"renewal_duration_unit"`
	// +optional
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status"`
	Spec          *string `json:"spec" tf:"spec"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
}

type FirewallInstanceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// FirewallInstanceList is a list of FirewallInstances
type FirewallInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of FirewallInstance CRD objects
	Items []FirewallInstance `json:"items,omitempty"`
}
