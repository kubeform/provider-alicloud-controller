/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SsoAccessConfiguration struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SsoAccessConfigurationSpec   `json:"spec,omitempty"`
	Status            SsoAccessConfigurationStatus `json:"status,omitempty"`
}

type SsoAccessConfigurationSpecPermissionPolicies struct {
	// +optional
	PermissionPolicyDocument *string `json:"-" sensitive:"true" tf:"permission_policy_document"`
	PermissionPolicyName     *string `json:"permissionPolicyName" tf:"permission_policy_name"`
	PermissionPolicyType     *string `json:"permissionPolicyType" tf:"permission_policy_type"`
}

type SsoAccessConfigurationSpec struct {
	State *SsoAccessConfigurationSpecResource `json:"state,omitempty" tf:"-"`

	Resource SsoAccessConfigurationSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type SsoAccessConfigurationSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AccessConfigurationID   *string `json:"accessConfigurationID,omitempty" tf:"access_configuration_id"`
	AccessConfigurationName *string `json:"accessConfigurationName" tf:"access_configuration_name"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	DirectoryID *string `json:"directoryID" tf:"directory_id"`
	// +optional
	ForceRemovePermissionPolicies *bool `json:"forceRemovePermissionPolicies,omitempty" tf:"force_remove_permission_policies"`
	// +optional
	PermissionPolicies []SsoAccessConfigurationSpecPermissionPolicies `json:"permissionPolicies,omitempty" tf:"permission_policies"`
	// +optional
	RelayState *string `json:"relayState,omitempty" tf:"relay_state"`
	// +optional
	SessionDuration *int64 `json:"sessionDuration,omitempty" tf:"session_duration"`
}

type SsoAccessConfigurationStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SsoAccessConfigurationList is a list of SsoAccessConfigurations
type SsoAccessConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SsoAccessConfiguration CRD objects
	Items []SsoAccessConfiguration `json:"items,omitempty"`
}
