/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SynchronizationJob struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SynchronizationJobSpec   `json:"spec,omitempty"`
	Status            SynchronizationJobStatus `json:"status,omitempty"`
}

type SynchronizationJobSpec struct {
	State *SynchronizationJobSpecResource `json:"state,omitempty" tf:"-"`

	Resource SynchronizationJobSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type SynchronizationJobSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Checkpoint          *string `json:"checkpoint,omitempty" tf:"checkpoint"`
	DataInitialization  *bool   `json:"dataInitialization" tf:"data_initialization"`
	DataSynchronization *bool   `json:"dataSynchronization" tf:"data_synchronization"`
	DbList              *string `json:"dbList" tf:"db_list"`
	// +optional
	DelayNotice *bool `json:"delayNotice,omitempty" tf:"delay_notice"`
	// +optional
	DelayPhone *string `json:"delayPhone,omitempty" tf:"delay_phone"`
	// +optional
	DelayRuleTime *string `json:"delayRuleTime,omitempty" tf:"delay_rule_time"`
	// +optional
	DestinationEndpointDatabaseName *string `json:"destinationEndpointDatabaseName,omitempty" tf:"destination_endpoint_database_name"`
	DestinationEndpointEngineName   *string `json:"destinationEndpointEngineName" tf:"destination_endpoint_engine_name"`
	// +optional
	DestinationEndpointInstanceID   *string `json:"destinationEndpointInstanceID,omitempty" tf:"destination_endpoint_instance_id"`
	DestinationEndpointInstanceType *string `json:"destinationEndpointInstanceType" tf:"destination_endpoint_instance_type"`
	// +optional
	DestinationEndpointIP *string `json:"destinationEndpointIP,omitempty" tf:"destination_endpoint_ip"`
	// +optional
	DestinationEndpointOracleSid *string `json:"destinationEndpointOracleSid,omitempty" tf:"destination_endpoint_oracle_sid"`
	// +optional
	DestinationEndpointPassword *string `json:"destinationEndpointPassword,omitempty" tf:"destination_endpoint_password"`
	// +optional
	DestinationEndpointPort *string `json:"destinationEndpointPort,omitempty" tf:"destination_endpoint_port"`
	// +optional
	DestinationEndpointRegion *string `json:"destinationEndpointRegion,omitempty" tf:"destination_endpoint_region"`
	// +optional
	DestinationEndpointUserName *string `json:"destinationEndpointUserName,omitempty" tf:"destination_endpoint_user_name"`
	DtsInstanceID               *string `json:"dtsInstanceID" tf:"dts_instance_id"`
	DtsJobName                  *string `json:"dtsJobName" tf:"dts_job_name"`
	// +optional
	ErrorNotice *bool `json:"errorNotice,omitempty" tf:"error_notice"`
	// +optional
	ErrorPhone *string `json:"errorPhone,omitempty" tf:"error_phone"`
	// +optional
	InstanceClass *string `json:"instanceClass,omitempty" tf:"instance_class"`
	// +optional
	Reserve *string `json:"reserve,omitempty" tf:"reserve"`
	// +optional
	SourceEndpointDatabaseName *string `json:"sourceEndpointDatabaseName,omitempty" tf:"source_endpoint_database_name"`
	SourceEndpointEngineName   *string `json:"sourceEndpointEngineName" tf:"source_endpoint_engine_name"`
	// +optional
	SourceEndpointInstanceID   *string `json:"sourceEndpointInstanceID,omitempty" tf:"source_endpoint_instance_id"`
	SourceEndpointInstanceType *string `json:"sourceEndpointInstanceType" tf:"source_endpoint_instance_type"`
	// +optional
	SourceEndpointIP *string `json:"sourceEndpointIP,omitempty" tf:"source_endpoint_ip"`
	// +optional
	SourceEndpointOracleSid *string `json:"sourceEndpointOracleSid,omitempty" tf:"source_endpoint_oracle_sid"`
	// +optional
	SourceEndpointOwnerID *string `json:"sourceEndpointOwnerID,omitempty" tf:"source_endpoint_owner_id"`
	// +optional
	SourceEndpointPassword *string `json:"sourceEndpointPassword,omitempty" tf:"source_endpoint_password"`
	// +optional
	SourceEndpointPort *string `json:"sourceEndpointPort,omitempty" tf:"source_endpoint_port"`
	// +optional
	SourceEndpointRegion *string `json:"sourceEndpointRegion,omitempty" tf:"source_endpoint_region"`
	// +optional
	SourceEndpointRole *string `json:"sourceEndpointRole,omitempty" tf:"source_endpoint_role"`
	// +optional
	SourceEndpointUserName *string `json:"sourceEndpointUserName,omitempty" tf:"source_endpoint_user_name"`
	// +optional
	Status                  *string `json:"status,omitempty" tf:"status"`
	StructureInitialization *bool   `json:"structureInitialization" tf:"structure_initialization"`
	// +optional
	SynchronizationDirection *string `json:"synchronizationDirection,omitempty" tf:"synchronization_direction"`
}

type SynchronizationJobStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SynchronizationJobList is a list of SynchronizationJobs
type SynchronizationJobList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SynchronizationJob CRD objects
	Items []SynchronizationJob `json:"items,omitempty"`
}
