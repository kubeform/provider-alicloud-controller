/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MetricRuleTemplate struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MetricRuleTemplateSpec   `json:"spec,omitempty"`
	Status            MetricRuleTemplateStatus `json:"status,omitempty"`
}

type MetricRuleTemplateSpecAlertTemplatesEscalationsCritical struct {
	// +optional
	ComparisonOperator *string `json:"comparisonOperator,omitempty" tf:"comparison_operator"`
	// +optional
	Statistics *string `json:"statistics,omitempty" tf:"statistics"`
	// +optional
	Threshold *string `json:"threshold,omitempty" tf:"threshold"`
	// +optional
	Times *string `json:"times,omitempty" tf:"times"`
}

type MetricRuleTemplateSpecAlertTemplatesEscalationsInfo struct {
	// +optional
	ComparisonOperator *string `json:"comparisonOperator,omitempty" tf:"comparison_operator"`
	// +optional
	Statistics *string `json:"statistics,omitempty" tf:"statistics"`
	// +optional
	Threshold *string `json:"threshold,omitempty" tf:"threshold"`
	// +optional
	Times *string `json:"times,omitempty" tf:"times"`
}

type MetricRuleTemplateSpecAlertTemplatesEscalationsWarn struct {
	// +optional
	ComparisonOperator *string `json:"comparisonOperator,omitempty" tf:"comparison_operator"`
	// +optional
	Statistics *string `json:"statistics,omitempty" tf:"statistics"`
	// +optional
	Threshold *string `json:"threshold,omitempty" tf:"threshold"`
	// +optional
	Times *string `json:"times,omitempty" tf:"times"`
}

type MetricRuleTemplateSpecAlertTemplatesEscalations struct {
	// +optional
	Critical *MetricRuleTemplateSpecAlertTemplatesEscalationsCritical `json:"critical,omitempty" tf:"critical"`
	// +optional
	Info *MetricRuleTemplateSpecAlertTemplatesEscalationsInfo `json:"info,omitempty" tf:"info"`
	// +optional
	Warn *MetricRuleTemplateSpecAlertTemplatesEscalationsWarn `json:"warn,omitempty" tf:"warn"`
}

type MetricRuleTemplateSpecAlertTemplates struct {
	Category *string `json:"category" tf:"category"`
	// +optional
	Escalations *MetricRuleTemplateSpecAlertTemplatesEscalations `json:"escalations,omitempty" tf:"escalations"`
	MetricName  *string                                          `json:"metricName" tf:"metric_name"`
	Namespace   *string                                          `json:"namespace" tf:"namespace"`
	RuleName    *string                                          `json:"ruleName" tf:"rule_name"`
	// +optional
	Webhook *string `json:"webhook,omitempty" tf:"webhook"`
}

type MetricRuleTemplateSpec struct {
	State *MetricRuleTemplateSpecResource `json:"state,omitempty" tf:"-"`

	Resource MetricRuleTemplateSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type MetricRuleTemplateSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AlertTemplates []MetricRuleTemplateSpecAlertTemplates `json:"alertTemplates,omitempty" tf:"alert_templates"`
	// +optional
	ApplyMode *string `json:"applyMode,omitempty" tf:"apply_mode"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	EnableEndTime *string `json:"enableEndTime,omitempty" tf:"enable_end_time"`
	// +optional
	EnableStartTime *string `json:"enableStartTime,omitempty" tf:"enable_start_time"`
	// +optional
	GroupID                *string `json:"groupID,omitempty" tf:"group_id"`
	MetricRuleTemplateName *string `json:"metricRuleTemplateName" tf:"metric_rule_template_name"`
	// +optional
	NotifyLevel *string `json:"notifyLevel,omitempty" tf:"notify_level"`
	// +optional
	RestVersion *string `json:"restVersion,omitempty" tf:"rest_version"`
	// +optional
	SilenceTime *int64 `json:"silenceTime,omitempty" tf:"silence_time"`
	// +optional
	Webhook *string `json:"webhook,omitempty" tf:"webhook"`
}

type MetricRuleTemplateStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MetricRuleTemplateList is a list of MetricRuleTemplates
type MetricRuleTemplateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of MetricRuleTemplate CRD objects
	Items []MetricRuleTemplate `json:"items,omitempty"`
}
