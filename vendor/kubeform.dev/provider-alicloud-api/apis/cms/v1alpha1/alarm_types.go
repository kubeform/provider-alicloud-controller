/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Alarm struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AlarmSpec   `json:"spec,omitempty"`
	Status            AlarmStatus `json:"status,omitempty"`
}

type AlarmSpecEscalationsCritical struct {
	// +optional
	ComparisonOperator *string `json:"comparisonOperator,omitempty" tf:"comparison_operator"`
	// +optional
	Statistics *string `json:"statistics,omitempty" tf:"statistics"`
	// +optional
	Threshold *string `json:"threshold,omitempty" tf:"threshold"`
	// +optional
	Times *int64 `json:"times,omitempty" tf:"times"`
}

type AlarmSpecEscalationsInfo struct {
	// +optional
	ComparisonOperator *string `json:"comparisonOperator,omitempty" tf:"comparison_operator"`
	// +optional
	Statistics *string `json:"statistics,omitempty" tf:"statistics"`
	// +optional
	Threshold *string `json:"threshold,omitempty" tf:"threshold"`
	// +optional
	Times *int64 `json:"times,omitempty" tf:"times"`
}

type AlarmSpecEscalationsWarn struct {
	// +optional
	ComparisonOperator *string `json:"comparisonOperator,omitempty" tf:"comparison_operator"`
	// +optional
	Statistics *string `json:"statistics,omitempty" tf:"statistics"`
	// +optional
	Threshold *string `json:"threshold,omitempty" tf:"threshold"`
	// +optional
	Times *int64 `json:"times,omitempty" tf:"times"`
}

type AlarmSpec struct {
	State *AlarmSpecResource `json:"state,omitempty" tf:"-"`

	Resource AlarmSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type AlarmSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	ContactGroups []string          `json:"contactGroups" tf:"contact_groups"`
	Dimensions    map[string]string `json:"dimensions" tf:"dimensions"`
	// +optional
	EffectiveInterval *string `json:"effectiveInterval,omitempty" tf:"effective_interval"`
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// +optional
	// Deprecated
	EndTime *int64 `json:"endTime,omitempty" tf:"end_time"`
	// +optional
	EscalationsCritical *AlarmSpecEscalationsCritical `json:"escalationsCritical,omitempty" tf:"escalations_critical"`
	// +optional
	EscalationsInfo *AlarmSpecEscalationsInfo `json:"escalationsInfo,omitempty" tf:"escalations_info"`
	// +optional
	EscalationsWarn *AlarmSpecEscalationsWarn `json:"escalationsWarn,omitempty" tf:"escalations_warn"`
	Metric          *string                   `json:"metric" tf:"metric"`
	Name            *string                   `json:"name" tf:"name"`
	// +optional
	NotifyType *int64 `json:"notifyType,omitempty" tf:"notify_type"`
	// +optional
	// Deprecated
	Operator *string `json:"operator,omitempty" tf:"operator"`
	// +optional
	Period  *int64  `json:"period,omitempty" tf:"period"`
	Project *string `json:"project" tf:"project"`
	// +optional
	SilenceTime *int64 `json:"silenceTime,omitempty" tf:"silence_time"`
	// +optional
	// Deprecated
	StartTime *int64 `json:"startTime,omitempty" tf:"start_time"`
	// +optional
	// Deprecated
	Statistics *string `json:"statistics,omitempty" tf:"statistics"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	// Deprecated
	Threshold *string `json:"threshold,omitempty" tf:"threshold"`
	// +optional
	// Deprecated
	TriggeredCount *int64 `json:"triggeredCount,omitempty" tf:"triggered_count"`
	// +optional
	Webhook *string `json:"webhook,omitempty" tf:"webhook"`
}

type AlarmStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AlarmList is a list of Alarms
type AlarmList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Alarm CRD objects
	Items []Alarm `json:"items,omitempty"`
}
