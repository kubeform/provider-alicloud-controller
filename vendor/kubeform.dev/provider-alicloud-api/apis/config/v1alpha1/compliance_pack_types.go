/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type CompliancePack struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CompliancePackSpec   `json:"spec,omitempty"`
	Status            CompliancePackStatus `json:"status,omitempty"`
}

type CompliancePackSpecConfigRuleIDS struct {
	// +optional
	ConfigRuleID *string `json:"configRuleID,omitempty" tf:"config_rule_id"`
}

type CompliancePackSpecConfigRulesConfigRuleParameters struct {
	// +optional
	ParameterName *string `json:"parameterName,omitempty" tf:"parameter_name"`
	// +optional
	ParameterValue *string `json:"parameterValue,omitempty" tf:"parameter_value"`
}

type CompliancePackSpecConfigRules struct {
	// +optional
	ConfigRuleParameters  []CompliancePackSpecConfigRulesConfigRuleParameters `json:"configRuleParameters,omitempty" tf:"config_rule_parameters"`
	ManagedRuleIdentifier *string                                             `json:"managedRuleIdentifier" tf:"managed_rule_identifier"`
}

type CompliancePackSpec struct {
	State *CompliancePackSpecResource `json:"state,omitempty" tf:"-"`

	Resource CompliancePackSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type CompliancePackSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	CompliancePackName *string `json:"compliancePackName" tf:"compliance_pack_name"`
	// +optional
	CompliancePackTemplateID *string `json:"compliancePackTemplateID,omitempty" tf:"compliance_pack_template_id"`
	// +optional
	ConfigRuleIDS []CompliancePackSpecConfigRuleIDS `json:"configRuleIDS,omitempty" tf:"config_rule_ids"`
	// +optional
	// Deprecated
	ConfigRules []CompliancePackSpecConfigRules `json:"configRules,omitempty" tf:"config_rules"`
	Description *string                         `json:"description" tf:"description"`
	RiskLevel   *int64                          `json:"riskLevel" tf:"risk_level"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
}

type CompliancePackStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// CompliancePackList is a list of CompliancePacks
type CompliancePackList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of CompliancePack CRD objects
	Items []CompliancePack `json:"items,omitempty"`
}
