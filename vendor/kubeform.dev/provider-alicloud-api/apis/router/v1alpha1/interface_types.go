/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Interface struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InterfaceSpec   `json:"spec,omitempty"`
	Status            InterfaceStatus `json:"status,omitempty"`
}

type InterfaceSpec struct {
	State *InterfaceSpecResource `json:"state,omitempty" tf:"-"`

	Resource InterfaceSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type InterfaceSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	// Deprecated
	AccessPointID *string `json:"accessPointID,omitempty" tf:"access_point_id"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	HealthCheckSourceIP *string `json:"healthCheckSourceIP,omitempty" tf:"health_check_source_ip"`
	// +optional
	HealthCheckTargetIP *string `json:"healthCheckTargetIP,omitempty" tf:"health_check_target_ip"`
	// +optional
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	// Deprecated
	OppositeAccessPointID *string `json:"oppositeAccessPointID,omitempty" tf:"opposite_access_point_id"`
	// +optional
	// Deprecated
	OppositeInterfaceID *string `json:"oppositeInterfaceID,omitempty" tf:"opposite_interface_id"`
	// +optional
	// Deprecated
	OppositeInterfaceOwnerID *string `json:"oppositeInterfaceOwnerID,omitempty" tf:"opposite_interface_owner_id"`
	OppositeRegion           *string `json:"oppositeRegion" tf:"opposite_region"`
	// +optional
	// Deprecated
	OppositeRouterID *string `json:"oppositeRouterID,omitempty" tf:"opposite_router_id"`
	// +optional
	// Deprecated
	OppositeRouterType *string `json:"oppositeRouterType,omitempty" tf:"opposite_router_type"`
	// +optional
	Period     *int64  `json:"period,omitempty" tf:"period"`
	Role       *string `json:"role" tf:"role"`
	RouterID   *string `json:"routerID" tf:"router_id"`
	RouterType *string `json:"routerType" tf:"router_type"`
	// +optional
	Specification *string `json:"specification,omitempty" tf:"specification"`
}

type InterfaceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// InterfaceList is a list of Interfaces
type InterfaceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Interface CRD objects
	Items []Interface `json:"items,omitempty"`
}
