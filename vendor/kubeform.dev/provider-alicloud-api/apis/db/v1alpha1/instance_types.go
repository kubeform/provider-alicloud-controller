/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Instance struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstanceSpec   `json:"spec,omitempty"`
	Status            InstanceStatus `json:"status,omitempty"`
}

type InstanceSpecParameters struct {
	Name  *string `json:"name" tf:"name"`
	Value *string `json:"value" tf:"value"`
}

type InstanceSpec struct {
	State *InstanceSpecResource `json:"state,omitempty" tf:"-"`

	Resource InstanceSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type InstanceSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Acl *string `json:"acl,omitempty" tf:"acl"`
	// +optional
	AutoRenew *bool `json:"autoRenew,omitempty" tf:"auto_renew"`
	// +optional
	AutoRenewPeriod *int64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period"`
	// +optional
	AutoUpgradeMinorVersion *string `json:"autoUpgradeMinorVersion,omitempty" tf:"auto_upgrade_minor_version"`
	// +optional
	CaType *string `json:"caType,omitempty" tf:"ca_type"`
	// +optional
	ClientCaCert *string `json:"clientCaCert,omitempty" tf:"client_ca_cert"`
	// +optional
	ClientCaEnabled *int64 `json:"clientCaEnabled,omitempty" tf:"client_ca_enabled"`
	// +optional
	ClientCertRevocationList *string `json:"clientCertRevocationList,omitempty" tf:"client_cert_revocation_list"`
	// +optional
	ClientCrlEnabled *int64 `json:"clientCrlEnabled,omitempty" tf:"client_crl_enabled"`
	// +optional
	ConnectionString *string `json:"connectionString,omitempty" tf:"connection_string"`
	// +optional
	ConnectionStringPrefix *string `json:"connectionStringPrefix,omitempty" tf:"connection_string_prefix"`
	// +optional
	DbInstanceIPArrayAttribute *string `json:"dbInstanceIPArrayAttribute,omitempty" tf:"db_instance_ip_array_attribute"`
	// +optional
	DbInstanceIPArrayName *string `json:"dbInstanceIPArrayName,omitempty" tf:"db_instance_ip_array_name"`
	// +optional
	DbInstanceStorageType *string `json:"dbInstanceStorageType,omitempty" tf:"db_instance_storage_type"`
	// +optional
	DbTimeZone *string `json:"dbTimeZone,omitempty" tf:"db_time_zone"`
	// +optional
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key"`
	Engine        *string `json:"engine" tf:"engine"`
	EngineVersion *string `json:"engineVersion" tf:"engine_version"`
	// +optional
	ForceRestart *bool `json:"forceRestart,omitempty" tf:"force_restart"`
	// +optional
	HaConfig *string `json:"haConfig,omitempty" tf:"ha_config"`
	// +optional
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type"`
	// +optional
	InstanceName    *string `json:"instanceName,omitempty" tf:"instance_name"`
	InstanceStorage *int64  `json:"instanceStorage" tf:"instance_storage"`
	InstanceType    *string `json:"instanceType" tf:"instance_type"`
	// +optional
	MaintainTime *string `json:"maintainTime,omitempty" tf:"maintain_time"`
	// +optional
	ManualHaTime *string `json:"manualHaTime,omitempty" tf:"manual_ha_time"`
	// +optional
	ModifyMode *string `json:"modifyMode,omitempty" tf:"modify_mode"`
	// +optional
	MonitoringPeriod *int64 `json:"monitoringPeriod,omitempty" tf:"monitoring_period"`
	// +optional
	Parameters []InstanceSpecParameters `json:"parameters,omitempty" tf:"parameters"`
	// +optional
	Period *int64 `json:"period,omitempty" tf:"period"`
	// +optional
	Port *string `json:"port,omitempty" tf:"port"`
	// +optional
	PrivateIPAddress *string `json:"privateIPAddress,omitempty" tf:"private_ip_address"`
	// +optional
	ReleasedKeepPolicy *string `json:"releasedKeepPolicy,omitempty" tf:"released_keep_policy"`
	// +optional
	ReplicationACL *string `json:"replicationACL,omitempty" tf:"replication_acl"`
	// +optional
	ResourceGroupID *string `json:"resourceGroupID,omitempty" tf:"resource_group_id"`
	// +optional
	// Deprecated
	SecurityGroupID *string `json:"securityGroupID,omitempty" tf:"security_group_id"`
	// +optional
	SecurityGroupIDS []string `json:"securityGroupIDS,omitempty" tf:"security_group_ids"`
	// +optional
	SecurityIPMode *string `json:"securityIPMode,omitempty" tf:"security_ip_mode"`
	// +optional
	SecurityIPType *string `json:"securityIPType,omitempty" tf:"security_ip_type"`
	// +optional
	SecurityIPS []string `json:"securityIPS,omitempty" tf:"security_ips"`
	// +optional
	ServerCert *string `json:"serverCert,omitempty" tf:"server_cert"`
	// +optional
	ServerKey *string `json:"serverKey,omitempty" tf:"server_key"`
	// +optional
	SqlCollectorConfigValue *int64 `json:"sqlCollectorConfigValue,omitempty" tf:"sql_collector_config_value"`
	// +optional
	SqlCollectorStatus *string `json:"sqlCollectorStatus,omitempty" tf:"sql_collector_status"`
	// +optional
	SslAction *string `json:"sslAction,omitempty" tf:"ssl_action"`
	// +optional
	SslStatus *string `json:"sslStatus,omitempty" tf:"ssl_status"`
	// +optional
	StorageAutoScale *string `json:"storageAutoScale,omitempty" tf:"storage_auto_scale"`
	// +optional
	StorageThreshold *int64 `json:"storageThreshold,omitempty" tf:"storage_threshold"`
	// +optional
	StorageUpperBound *int64 `json:"storageUpperBound,omitempty" tf:"storage_upper_bound"`
	// +optional
	SwitchTime *string `json:"switchTime,omitempty" tf:"switch_time"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TargetMinorVersion *string `json:"targetMinorVersion,omitempty" tf:"target_minor_version"`
	// +optional
	TdeStatus *string `json:"tdeStatus,omitempty" tf:"tde_status"`
	// +optional
	UpgradeDbInstanceKernelVersion *bool `json:"upgradeDbInstanceKernelVersion,omitempty" tf:"upgrade_db_instance_kernel_version"`
	// +optional
	UpgradeTime *string `json:"upgradeTime,omitempty" tf:"upgrade_time"`
	// +optional
	VswitchID *string `json:"vswitchID,omitempty" tf:"vswitch_id"`
	// +optional
	WhitelistNetworkType *string `json:"whitelistNetworkType,omitempty" tf:"whitelist_network_type"`
	// +optional
	ZoneID *string `json:"zoneID,omitempty" tf:"zone_id"`
	// +optional
	ZoneIDSlaveA *string `json:"zoneIDSlaveA,omitempty" tf:"zone_id_slave_a"`
	// +optional
	ZoneIDSlaveB *string `json:"zoneIDSlaveB,omitempty" tf:"zone_id_slave_b"`
}

type InstanceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// InstanceList is a list of Instances
type InstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Instance CRD objects
	Items []Instance `json:"items,omitempty"`
}
