/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AutoSnapshotPolicy struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AutoSnapshotPolicySpec   `json:"spec,omitempty"`
	Status            AutoSnapshotPolicyStatus `json:"status,omitempty"`
}

type AutoSnapshotPolicySpec struct {
	State *AutoSnapshotPolicySpecResource `json:"state,omitempty" tf:"-"`

	Resource AutoSnapshotPolicySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type AutoSnapshotPolicySpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	CopiedSnapshotsRetentionDays *int64 `json:"copiedSnapshotsRetentionDays,omitempty" tf:"copied_snapshots_retention_days"`
	// +optional
	EnableCrossRegionCopy *bool `json:"enableCrossRegionCopy,omitempty" tf:"enable_cross_region_copy"`
	// +optional
	Name           *string  `json:"name,omitempty" tf:"name"`
	RepeatWeekdays []string `json:"repeatWeekdays" tf:"repeat_weekdays"`
	RetentionDays  *int64   `json:"retentionDays" tf:"retention_days"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TargetCopyRegions []string `json:"targetCopyRegions,omitempty" tf:"target_copy_regions"`
	TimePoints        []string `json:"timePoints" tf:"time_points"`
}

type AutoSnapshotPolicyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AutoSnapshotPolicyList is a list of AutoSnapshotPolicys
type AutoSnapshotPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AutoSnapshotPolicy CRD objects
	Items []AutoSnapshotPolicy `json:"items,omitempty"`
}
