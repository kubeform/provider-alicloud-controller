/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type LaunchTemplate struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LaunchTemplateSpec   `json:"spec,omitempty"`
	Status            LaunchTemplateStatus `json:"status,omitempty"`
}

type LaunchTemplateSpecDataDisks struct {
	// +optional
	Category *string `json:"category,omitempty" tf:"category"`
	// +optional
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	Encrypted *bool `json:"encrypted,omitempty" tf:"encrypted"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	PerformanceLevel *string `json:"performanceLevel,omitempty" tf:"performance_level"`
	// +optional
	Size *int64 `json:"size,omitempty" tf:"size"`
	// +optional
	SnapshotID *string `json:"snapshotID,omitempty" tf:"snapshot_id"`
}

type LaunchTemplateSpecNetworkInterfaces struct {
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	PrimaryIP *string `json:"primaryIP,omitempty" tf:"primary_ip"`
	// +optional
	SecurityGroupID *string `json:"securityGroupID,omitempty" tf:"security_group_id"`
	// +optional
	VswitchID *string `json:"vswitchID,omitempty" tf:"vswitch_id"`
}

type LaunchTemplateSpecSystemDisk struct {
	// +optional
	Category *string `json:"category,omitempty" tf:"category"`
	// +optional
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	Iops *string `json:"iops,omitempty" tf:"iops"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	PerformanceLevel *string `json:"performanceLevel,omitempty" tf:"performance_level"`
	// +optional
	Size *int64 `json:"size,omitempty" tf:"size"`
}

type LaunchTemplateSpec struct {
	State *LaunchTemplateSpecResource `json:"state,omitempty" tf:"-"`

	Resource LaunchTemplateSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type LaunchTemplateSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AutoReleaseTime *string `json:"autoReleaseTime,omitempty" tf:"auto_release_time"`
	// +optional
	DataDisks []LaunchTemplateSpecDataDisks `json:"dataDisks,omitempty" tf:"data_disks"`
	// +optional
	DeploymentSetID *string `json:"deploymentSetID,omitempty" tf:"deployment_set_id"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	EnableVmOsConfig *bool `json:"enableVmOsConfig,omitempty" tf:"enable_vm_os_config"`
	// +optional
	HostName *string `json:"hostName,omitempty" tf:"host_name"`
	// +optional
	ImageID *string `json:"imageID,omitempty" tf:"image_id"`
	// +optional
	ImageOwnerAlias *string `json:"imageOwnerAlias,omitempty" tf:"image_owner_alias"`
	// +optional
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type"`
	// +optional
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name"`
	// +optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type"`
	// +optional
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type"`
	// +optional
	InternetMaxBandwidthIn *int64 `json:"internetMaxBandwidthIn,omitempty" tf:"internet_max_bandwidth_in"`
	// +optional
	InternetMaxBandwidthOut *int64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out"`
	// +optional
	IoOptimized *string `json:"ioOptimized,omitempty" tf:"io_optimized"`
	// +optional
	KeyPairName *string `json:"keyPairName,omitempty" tf:"key_pair_name"`
	// +optional
	LaunchTemplateName *string `json:"launchTemplateName,omitempty" tf:"launch_template_name"`
	// +optional
	// Deprecated
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	NetworkInterfaces *LaunchTemplateSpecNetworkInterfaces `json:"networkInterfaces,omitempty" tf:"network_interfaces"`
	// +optional
	NetworkType *string `json:"networkType,omitempty" tf:"network_type"`
	// +optional
	PasswordInherit *bool `json:"passwordInherit,omitempty" tf:"password_inherit"`
	// +optional
	Period *int64 `json:"period,omitempty" tf:"period"`
	// +optional
	PrivateIPAddress *string `json:"privateIPAddress,omitempty" tf:"private_ip_address"`
	// +optional
	RamRoleName *string `json:"ramRoleName,omitempty" tf:"ram_role_name"`
	// +optional
	ResourceGroupID *string `json:"resourceGroupID,omitempty" tf:"resource_group_id"`
	// +optional
	SecurityEnhancementStrategy *string `json:"securityEnhancementStrategy,omitempty" tf:"security_enhancement_strategy"`
	// +optional
	SecurityGroupID *string `json:"securityGroupID,omitempty" tf:"security_group_id"`
	// +optional
	SecurityGroupIDS []string `json:"securityGroupIDS,omitempty" tf:"security_group_ids"`
	// +optional
	SpotDuration *string `json:"spotDuration,omitempty" tf:"spot_duration"`
	// +optional
	SpotPriceLimit *float64 `json:"spotPriceLimit,omitempty" tf:"spot_price_limit"`
	// +optional
	SpotStrategy *string `json:"spotStrategy,omitempty" tf:"spot_strategy"`
	// +optional
	SystemDisk *LaunchTemplateSpecSystemDisk `json:"systemDisk,omitempty" tf:"system_disk"`
	// +optional
	// Deprecated
	SystemDiskCategory *string `json:"systemDiskCategory,omitempty" tf:"system_disk_category"`
	// +optional
	// Deprecated
	SystemDiskDescription *string `json:"systemDiskDescription,omitempty" tf:"system_disk_description"`
	// +optional
	// Deprecated
	SystemDiskName *string `json:"systemDiskName,omitempty" tf:"system_disk_name"`
	// +optional
	// Deprecated
	SystemDiskSize *int64 `json:"systemDiskSize,omitempty" tf:"system_disk_size"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TemplateResourceGroupID *string `json:"templateResourceGroupID,omitempty" tf:"template_resource_group_id"`
	// +optional
	TemplateTags map[string]string `json:"templateTags,omitempty" tf:"template_tags"`
	// +optional
	UserData *string `json:"userData,omitempty" tf:"user_data"`
	// +optional
	// Deprecated
	Userdata *string `json:"userdata,omitempty" tf:"userdata"`
	// +optional
	VersionDescription *string `json:"versionDescription,omitempty" tf:"version_description"`
	// +optional
	VpcID *string `json:"vpcID,omitempty" tf:"vpc_id"`
	// +optional
	VswitchID *string `json:"vswitchID,omitempty" tf:"vswitch_id"`
	// +optional
	ZoneID *string `json:"zoneID,omitempty" tf:"zone_id"`
}

type LaunchTemplateStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// LaunchTemplateList is a list of LaunchTemplates
type LaunchTemplateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of LaunchTemplate CRD objects
	Items []LaunchTemplate `json:"items,omitempty"`
}
