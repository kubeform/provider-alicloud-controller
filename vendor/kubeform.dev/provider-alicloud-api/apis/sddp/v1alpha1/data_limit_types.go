/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DataLimit struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DataLimitSpec   `json:"spec,omitempty"`
	Status            DataLimitStatus `json:"status,omitempty"`
}

type DataLimitSpec struct {
	State *DataLimitSpecResource `json:"state,omitempty" tf:"-"`

	Resource DataLimitSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type DataLimitSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AuditStatus *int64 `json:"auditStatus,omitempty" tf:"audit_status"`
	// +optional
	EngineType *string `json:"engineType,omitempty" tf:"engine_type"`
	// +optional
	Lang *string `json:"lang,omitempty" tf:"lang"`
	// +optional
	LogStoreDay *int64 `json:"logStoreDay,omitempty" tf:"log_store_day"`
	// +optional
	ParentID *string `json:"parentID,omitempty" tf:"parent_id"`
	// +optional
	Password *string `json:"password,omitempty" tf:"password"`
	// +optional
	Port         *int64  `json:"port,omitempty" tf:"port"`
	ResourceType *string `json:"resourceType" tf:"resource_type"`
	// +optional
	ServiceRegionID *string `json:"serviceRegionID,omitempty" tf:"service_region_id"`
	// +optional
	UserName *string `json:"userName,omitempty" tf:"user_name"`
}

type DataLimitStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DataLimitList is a list of DataLimits
type DataLimitList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DataLimit CRD objects
	Items []DataLimit `json:"items,omitempty"`
}
