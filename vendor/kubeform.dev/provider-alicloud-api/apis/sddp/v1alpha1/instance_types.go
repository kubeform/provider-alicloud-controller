/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Instance struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstanceSpec   `json:"spec,omitempty"`
	Status            InstanceStatus `json:"status,omitempty"`
}

type InstanceSpec struct {
	State *InstanceSpecResource `json:"state,omitempty" tf:"-"`

	Resource InstanceSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type InstanceSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Authed *bool `json:"authed,omitempty" tf:"authed"`
	// +optional
	Dataphin *string `json:"dataphin,omitempty" tf:"dataphin"`
	// +optional
	DataphinCount *string `json:"dataphinCount,omitempty" tf:"dataphin_count"`
	// +optional
	InstanceNum *string `json:"instanceNum,omitempty" tf:"instance_num"`
	// +optional
	Logistics *string `json:"logistics,omitempty" tf:"logistics"`
	// +optional
	ModifyType *string `json:"modifyType,omitempty" tf:"modify_type"`
	// +optional
	OdpsSet *bool `json:"odpsSet,omitempty" tf:"odps_set"`
	// +optional
	OssBucketSet *bool `json:"ossBucketSet,omitempty" tf:"oss_bucket_set"`
	// +optional
	OssSize     *string `json:"ossSize,omitempty" tf:"oss_size"`
	PaymentType *string `json:"paymentType" tf:"payment_type"`
	Period      *int64  `json:"period" tf:"period"`
	// +optional
	RdsSet *bool `json:"rdsSet,omitempty" tf:"rds_set"`
	// +optional
	RemainDays *string `json:"remainDays,omitempty" tf:"remain_days"`
	// +optional
	RenewPeriod *int64 `json:"renewPeriod,omitempty" tf:"renew_period"`
	// +optional
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status"`
	SdCbool       *string `json:"sdCbool" tf:"sd_cbool"`
	Sdc           *string `json:"sdc" tf:"sdc"`
	SddpVersion   *string `json:"sddpVersion" tf:"sddp_version"`
	// +optional
	Status  *string `json:"status,omitempty" tf:"status"`
	UdCbool *string `json:"udCbool" tf:"ud_cbool"`
	Udc     *string `json:"udc" tf:"udc"`
}

type InstanceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// InstanceList is a list of Instances
type InstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Instance CRD objects
	Items []Instance `json:"items,omitempty"`
}
