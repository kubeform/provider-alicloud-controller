/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Connection struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ConnectionSpec   `json:"spec,omitempty"`
	Status            ConnectionStatus `json:"status,omitempty"`
}

type ConnectionSpecIkeConfig struct {
	// +optional
	IkeAuthAlg *string `json:"ikeAuthAlg,omitempty" tf:"ike_auth_alg"`
	// +optional
	IkeEncAlg *string `json:"ikeEncAlg,omitempty" tf:"ike_enc_alg"`
	// +optional
	IkeLifetime *int64 `json:"ikeLifetime,omitempty" tf:"ike_lifetime"`
	// +optional
	IkeLocalID *string `json:"ikeLocalID,omitempty" tf:"ike_local_id"`
	// +optional
	IkeMode *string `json:"ikeMode,omitempty" tf:"ike_mode"`
	// +optional
	IkePfs *string `json:"ikePfs,omitempty" tf:"ike_pfs"`
	// +optional
	IkeRemoteID *string `json:"ikeRemoteID,omitempty" tf:"ike_remote_id"`
	// +optional
	IkeVersion *string `json:"ikeVersion,omitempty" tf:"ike_version"`
	// +optional
	Psk *string `json:"psk,omitempty" tf:"psk"`
}

type ConnectionSpecIpsecConfig struct {
	// +optional
	IpsecAuthAlg *string `json:"ipsecAuthAlg,omitempty" tf:"ipsec_auth_alg"`
	// +optional
	IpsecEncAlg *string `json:"ipsecEncAlg,omitempty" tf:"ipsec_enc_alg"`
	// +optional
	IpsecLifetime *int64 `json:"ipsecLifetime,omitempty" tf:"ipsec_lifetime"`
	// +optional
	IpsecPfs *string `json:"ipsecPfs,omitempty" tf:"ipsec_pfs"`
}

type ConnectionSpec struct {
	State *ConnectionSpecResource `json:"state,omitempty" tf:"-"`

	Resource ConnectionSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ConnectionSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	CustomerGatewayID *string `json:"customerGatewayID" tf:"customer_gateway_id"`
	// +optional
	EffectImmediately *bool `json:"effectImmediately,omitempty" tf:"effect_immediately"`
	// +optional
	IkeConfig []ConnectionSpecIkeConfig `json:"ikeConfig,omitempty" tf:"ike_config"`
	// +optional
	IpsecConfig []ConnectionSpecIpsecConfig `json:"ipsecConfig,omitempty" tf:"ipsec_config"`
	// +kubebuilder:validation:MaxItems=10
	// +kubebuilder:validation:MinItems=1
	LocalSubnet []string `json:"localSubnet" tf:"local_subnet"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +kubebuilder:validation:MaxItems=10
	// +kubebuilder:validation:MinItems=1
	RemoteSubnet []string `json:"remoteSubnet" tf:"remote_subnet"`
	// +optional
	Status       *string `json:"status,omitempty" tf:"status"`
	VpnGatewayID *string `json:"vpnGatewayID" tf:"vpn_gateway_id"`
}

type ConnectionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ConnectionList is a list of Connections
type ConnectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Connection CRD objects
	Items []Connection `json:"items,omitempty"`
}
