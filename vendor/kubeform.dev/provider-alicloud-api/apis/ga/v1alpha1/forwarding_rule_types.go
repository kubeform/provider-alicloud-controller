/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ForwardingRule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ForwardingRuleSpec   `json:"spec,omitempty"`
	Status            ForwardingRuleStatus `json:"status,omitempty"`
}

type ForwardingRuleSpecRuleActionsForwardGroupConfigServerGroupTuples struct {
	EndpointGroupID *string `json:"endpointGroupID" tf:"endpoint_group_id"`
}

type ForwardingRuleSpecRuleActionsForwardGroupConfig struct {
	ServerGroupTuples []ForwardingRuleSpecRuleActionsForwardGroupConfigServerGroupTuples `json:"serverGroupTuples" tf:"server_group_tuples"`
}

type ForwardingRuleSpecRuleActions struct {
	ForwardGroupConfig *ForwardingRuleSpecRuleActionsForwardGroupConfig `json:"forwardGroupConfig" tf:"forward_group_config"`
	Order              *int64                                           `json:"order" tf:"order"`
	RuleActionType     *string                                          `json:"ruleActionType" tf:"rule_action_type"`
}

type ForwardingRuleSpecRuleConditionsHostConfig struct {
	// +optional
	Values []string `json:"values,omitempty" tf:"values"`
}

type ForwardingRuleSpecRuleConditionsPathConfig struct {
	// +optional
	Values []string `json:"values,omitempty" tf:"values"`
}

type ForwardingRuleSpecRuleConditions struct {
	// +optional
	// +kubebuilder:validation:MinItems=1
	HostConfig []ForwardingRuleSpecRuleConditionsHostConfig `json:"hostConfig,omitempty" tf:"host_config"`
	// +optional
	PathConfig        *ForwardingRuleSpecRuleConditionsPathConfig `json:"pathConfig,omitempty" tf:"path_config"`
	RuleConditionType *string                                     `json:"ruleConditionType" tf:"rule_condition_type"`
}

type ForwardingRuleSpec struct {
	State *ForwardingRuleSpecResource `json:"state,omitempty" tf:"-"`

	Resource ForwardingRuleSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ForwardingRuleSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AcceleratorID *string `json:"acceleratorID" tf:"accelerator_id"`
	// +optional
	ForwardingRuleID *string `json:"forwardingRuleID,omitempty" tf:"forwarding_rule_id"`
	// +optional
	ForwardingRuleName *string `json:"forwardingRuleName,omitempty" tf:"forwarding_rule_name"`
	// +optional
	ForwardingRuleStatus *string `json:"forwardingRuleStatus,omitempty" tf:"forwarding_rule_status"`
	ListenerID           *string `json:"listenerID" tf:"listener_id"`
	// +optional
	Priority       *int64                             `json:"priority,omitempty" tf:"priority"`
	RuleActions    []ForwardingRuleSpecRuleActions    `json:"ruleActions" tf:"rule_actions"`
	RuleConditions []ForwardingRuleSpecRuleConditions `json:"ruleConditions" tf:"rule_conditions"`
}

type ForwardingRuleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ForwardingRuleList is a list of ForwardingRules
type ForwardingRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ForwardingRule CRD objects
	Items []ForwardingRule `json:"items,omitempty"`
}
