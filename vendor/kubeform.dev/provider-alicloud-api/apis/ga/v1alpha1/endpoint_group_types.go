/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type EndpointGroup struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EndpointGroupSpec   `json:"spec,omitempty"`
	Status            EndpointGroupStatus `json:"status,omitempty"`
}

type EndpointGroupSpecEndpointConfigurations struct {
	// +optional
	EnableClientipPreservation *bool   `json:"enableClientipPreservation,omitempty" tf:"enable_clientip_preservation"`
	Endpoint                   *string `json:"endpoint" tf:"endpoint"`
	Type                       *string `json:"type" tf:"type"`
	Weight                     *int64  `json:"weight" tf:"weight"`
}

type EndpointGroupSpecPortOverrides struct {
	// +optional
	EndpointPort *int64 `json:"endpointPort,omitempty" tf:"endpoint_port"`
	// +optional
	ListenerPort *int64 `json:"listenerPort,omitempty" tf:"listener_port"`
}

type EndpointGroupSpec struct {
	State *EndpointGroupSpecResource `json:"state,omitempty" tf:"-"`

	Resource EndpointGroupSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type EndpointGroupSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AcceleratorID *string `json:"acceleratorID" tf:"accelerator_id"`
	// +optional
	Description            *string                                   `json:"description,omitempty" tf:"description"`
	EndpointConfigurations []EndpointGroupSpecEndpointConfigurations `json:"endpointConfigurations" tf:"endpoint_configurations"`
	EndpointGroupRegion    *string                                   `json:"endpointGroupRegion" tf:"endpoint_group_region"`
	// +optional
	EndpointGroupType *string `json:"endpointGroupType,omitempty" tf:"endpoint_group_type"`
	// +optional
	EndpointRequestProtocol *string `json:"endpointRequestProtocol,omitempty" tf:"endpoint_request_protocol"`
	// +optional
	HealthCheckIntervalSeconds *int64 `json:"healthCheckIntervalSeconds,omitempty" tf:"health_check_interval_seconds"`
	// +optional
	HealthCheckPath *string `json:"healthCheckPath,omitempty" tf:"health_check_path"`
	// +optional
	HealthCheckPort *int64 `json:"healthCheckPort,omitempty" tf:"health_check_port"`
	// +optional
	HealthCheckProtocol *string `json:"healthCheckProtocol,omitempty" tf:"health_check_protocol"`
	ListenerID          *string `json:"listenerID" tf:"listener_id"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	PortOverrides *EndpointGroupSpecPortOverrides `json:"portOverrides,omitempty" tf:"port_overrides"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	ThresholdCount *int64 `json:"thresholdCount,omitempty" tf:"threshold_count"`
	// +optional
	TrafficPercentage *int64 `json:"trafficPercentage,omitempty" tf:"traffic_percentage"`
}

type EndpointGroupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// EndpointGroupList is a list of EndpointGroups
type EndpointGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of EndpointGroup CRD objects
	Items []EndpointGroup `json:"items,omitempty"`
}
