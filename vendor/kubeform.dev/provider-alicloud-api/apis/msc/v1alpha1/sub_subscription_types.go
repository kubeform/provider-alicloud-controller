/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SubSubscription struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SubSubscriptionSpec   `json:"spec,omitempty"`
	Status            SubSubscriptionStatus `json:"status,omitempty"`
}

type SubSubscriptionSpec struct {
	State *SubSubscriptionSpecResource `json:"state,omitempty" tf:"-"`

	Resource SubSubscriptionSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type SubSubscriptionSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Channel *string `json:"channel,omitempty" tf:"channel"`
	// +optional
	ContactIDS []string `json:"contactIDS,omitempty" tf:"contact_ids"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	EmailStatus *int64  `json:"emailStatus,omitempty" tf:"email_status"`
	ItemName    *string `json:"itemName" tf:"item_name"`
	// +optional
	PmsgStatus *int64 `json:"pmsgStatus,omitempty" tf:"pmsg_status"`
	// +optional
	SmsStatus *int64 `json:"smsStatus,omitempty" tf:"sms_status"`
	// +optional
	TtsStatus *int64 `json:"ttsStatus,omitempty" tf:"tts_status"`
	// +optional
	WebhookIDS []string `json:"webhookIDS,omitempty" tf:"webhook_ids"`
	// +optional
	WebhookStatus *int64 `json:"webhookStatus,omitempty" tf:"webhook_status"`
}

type SubSubscriptionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SubSubscriptionList is a list of SubSubscriptions
type SubSubscriptionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SubSubscription CRD objects
	Items []SubSubscription `json:"items,omitempty"`
}
