/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DedicatedHostGroup struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DedicatedHostGroupSpec   `json:"spec,omitempty"`
	Status            DedicatedHostGroupStatus `json:"status,omitempty"`
}

type DedicatedHostGroupSpec struct {
	State *DedicatedHostGroupSpecResource `json:"state,omitempty" tf:"-"`

	Resource DedicatedHostGroupSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type DedicatedHostGroupSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AllocationPolicy *string `json:"allocationPolicy,omitempty" tf:"allocation_policy"`
	// +optional
	CpuAllocationRatio *int64 `json:"cpuAllocationRatio,omitempty" tf:"cpu_allocation_ratio"`
	// +optional
	DedicatedHostGroupDesc *string `json:"dedicatedHostGroupDesc,omitempty" tf:"dedicated_host_group_desc"`
	// +optional
	DiskAllocationRatio *int64  `json:"diskAllocationRatio,omitempty" tf:"disk_allocation_ratio"`
	Engine              *string `json:"engine" tf:"engine"`
	// +optional
	HostReplacePolicy *string `json:"hostReplacePolicy,omitempty" tf:"host_replace_policy"`
	// +optional
	MemAllocationRatio *int64 `json:"memAllocationRatio,omitempty" tf:"mem_allocation_ratio"`
	// +optional
	OpenPermission *bool   `json:"openPermission,omitempty" tf:"open_permission"`
	VpcID          *string `json:"vpcID" tf:"vpc_id"`
}

type DedicatedHostGroupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DedicatedHostGroupList is a list of DedicatedHostGroups
type DedicatedHostGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DedicatedHostGroup CRD objects
	Items []DedicatedHostGroup `json:"items,omitempty"`
}
