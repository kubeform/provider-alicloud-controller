/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ChangeSet struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ChangeSetSpec   `json:"spec,omitempty"`
	Status            ChangeSetStatus `json:"status,omitempty"`
}

type ChangeSetSpecParameters struct {
	ParameterKey   *string `json:"parameterKey" tf:"parameter_key"`
	ParameterValue *string `json:"parameterValue" tf:"parameter_value"`
}

type ChangeSetSpec struct {
	State *ChangeSetSpecResource `json:"state,omitempty" tf:"-"`

	Resource ChangeSetSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ChangeSetSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	ChangeSetName *string `json:"changeSetName" tf:"change_set_name"`
	// +optional
	ChangeSetType *string `json:"changeSetType,omitempty" tf:"change_set_type"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DisableRollback *bool `json:"disableRollback,omitempty" tf:"disable_rollback"`
	// +optional
	NotificationUrls []string `json:"notificationUrls,omitempty" tf:"notification_urls"`
	// +optional
	Parameters []ChangeSetSpecParameters `json:"parameters,omitempty" tf:"parameters"`
	// +optional
	RamRoleName *string `json:"ramRoleName,omitempty" tf:"ram_role_name"`
	// +optional
	ReplacementOption *string `json:"replacementOption,omitempty" tf:"replacement_option"`
	// +optional
	StackID *string `json:"stackID,omitempty" tf:"stack_id"`
	// +optional
	StackName *string `json:"stackName,omitempty" tf:"stack_name"`
	// +optional
	StackPolicyBody *string `json:"stackPolicyBody,omitempty" tf:"stack_policy_body"`
	// +optional
	StackPolicyDuringUpdateBody *string `json:"stackPolicyDuringUpdateBody,omitempty" tf:"stack_policy_during_update_body"`
	// +optional
	StackPolicyDuringUpdateURL *string `json:"stackPolicyDuringUpdateURL,omitempty" tf:"stack_policy_during_update_url"`
	// +optional
	StackPolicyURL *string `json:"stackPolicyURL,omitempty" tf:"stack_policy_url"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	TemplateBody *string `json:"templateBody,omitempty" tf:"template_body"`
	// +optional
	TemplateURL *string `json:"templateURL,omitempty" tf:"template_url"`
	// +optional
	TimeoutInMinutes *int64 `json:"timeoutInMinutes,omitempty" tf:"timeout_in_minutes"`
	// +optional
	UsePreviousParameters *bool `json:"usePreviousParameters,omitempty" tf:"use_previous_parameters"`
}

type ChangeSetStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ChangeSetList is a list of ChangeSets
type ChangeSetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ChangeSet CRD objects
	Items []ChangeSet `json:"items,omitempty"`
}
