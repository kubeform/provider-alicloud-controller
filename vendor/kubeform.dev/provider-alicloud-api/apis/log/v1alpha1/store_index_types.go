/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type StoreIndex struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              StoreIndexSpec   `json:"spec,omitempty"`
	Status            StoreIndexStatus `json:"status,omitempty"`
}

type StoreIndexSpecFieldSearchJsonKeys struct {
	// +optional
	Alias *string `json:"alias,omitempty" tf:"alias"`
	// +optional
	DocValue *bool   `json:"docValue,omitempty" tf:"doc_value"`
	Name     *string `json:"name" tf:"name"`
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
}

type StoreIndexSpecFieldSearch struct {
	// +optional
	Alias *string `json:"alias,omitempty" tf:"alias"`
	// +optional
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive"`
	// +optional
	EnableAnalytics *bool `json:"enableAnalytics,omitempty" tf:"enable_analytics"`
	// +optional
	IncludeChinese *bool `json:"includeChinese,omitempty" tf:"include_chinese"`
	// +optional
	JsonKeys []StoreIndexSpecFieldSearchJsonKeys `json:"jsonKeys,omitempty" tf:"json_keys"`
	Name     *string                             `json:"name" tf:"name"`
	// +optional
	Token *string `json:"token,omitempty" tf:"token"`
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
}

type StoreIndexSpecFullText struct {
	// +optional
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive"`
	// +optional
	IncludeChinese *bool `json:"includeChinese,omitempty" tf:"include_chinese"`
	// +optional
	Token *string `json:"token,omitempty" tf:"token"`
}

type StoreIndexSpec struct {
	State *StoreIndexSpecResource `json:"state,omitempty" tf:"-"`

	Resource StoreIndexSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type StoreIndexSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	// +kubebuilder:validation:MinItems=1
	FieldSearch []StoreIndexSpecFieldSearch `json:"fieldSearch,omitempty" tf:"field_search"`
	// +optional
	FullText *StoreIndexSpecFullText `json:"fullText,omitempty" tf:"full_text"`
	Logstore *string                 `json:"logstore" tf:"logstore"`
	Project  *string                 `json:"project" tf:"project"`
}

type StoreIndexStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// StoreIndexList is a list of StoreIndexs
type StoreIndexList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of StoreIndex CRD objects
	Items []StoreIndex `json:"items,omitempty"`
}
