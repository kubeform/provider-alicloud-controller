/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SearchAppGroup struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SearchAppGroupSpec   `json:"spec,omitempty"`
	Status            SearchAppGroupStatus `json:"status,omitempty"`
}

type SearchAppGroupSpecOrder struct {
	// +optional
	AutoRenew *bool `json:"autoRenew,omitempty" tf:"auto_renew"`
	// +optional
	Duration *int64 `json:"duration,omitempty" tf:"duration"`
	// +optional
	PricingCycle *string `json:"pricingCycle,omitempty" tf:"pricing_cycle"`
}

type SearchAppGroupSpecQuota struct {
	ComputeResource *int64 `json:"computeResource" tf:"compute_resource"`
	DocSize         *int64 `json:"docSize" tf:"doc_size"`
	// +optional
	Qps  *int64  `json:"qps,omitempty" tf:"qps"`
	Spec *string `json:"spec" tf:"spec"`
}

type SearchAppGroupSpec struct {
	State *SearchAppGroupSpecResource `json:"state,omitempty" tf:"-"`

	Resource SearchAppGroupSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type SearchAppGroupSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AppGroupName *string `json:"appGroupName" tf:"app_group_name"`
	// +optional
	ChargeWay *string `json:"chargeWay,omitempty" tf:"charge_way"`
	// +optional
	CurrentVersion *string `json:"currentVersion,omitempty" tf:"current_version"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	Order []SearchAppGroupSpecOrder `json:"order,omitempty" tf:"order"`
	// +optional
	OrderType   *string                  `json:"orderType,omitempty" tf:"order_type"`
	PaymentType *string                  `json:"paymentType" tf:"payment_type"`
	Quota       *SearchAppGroupSpecQuota `json:"quota" tf:"quota"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	Type   *string `json:"type" tf:"type"`
}

type SearchAppGroupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SearchAppGroupList is a list of SearchAppGroups
type SearchAppGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SearchAppGroup CRD objects
	Items []SearchAppGroup `json:"items,omitempty"`
}
