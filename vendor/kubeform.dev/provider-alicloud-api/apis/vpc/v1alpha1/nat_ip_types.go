/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type NatIP struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NatIPSpec   `json:"spec,omitempty"`
	Status            NatIPStatus `json:"status,omitempty"`
}

type NatIPSpec struct {
	State *NatIPSpecResource `json:"state,omitempty" tf:"-"`

	Resource NatIPSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type NatIPSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	DryRun       *bool   `json:"dryRun,omitempty" tf:"dry_run"`
	NatGatewayID *string `json:"natGatewayID" tf:"nat_gateway_id"`
	// +optional
	NatIP *string `json:"natIP,omitempty" tf:"nat_ip"`
	// +optional
	NatIPCIDR *string `json:"natIPCIDR,omitempty" tf:"nat_ip_cidr"`
	// +optional
	NatIPCIDRID *string `json:"natIPCIDRID,omitempty" tf:"nat_ip_cidr_id"`
	// +optional
	NatIPDescription *string `json:"natIPDescription,omitempty" tf:"nat_ip_description"`
	// +optional
	NatIPID *string `json:"natIPID,omitempty" tf:"nat_ip_id"`
	// +optional
	NatIPName *string `json:"natIPName,omitempty" tf:"nat_ip_name"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
}

type NatIPStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// NatIPList is a list of NatIPs
type NatIPList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of NatIP CRD objects
	Items []NatIP `json:"items,omitempty"`
}
