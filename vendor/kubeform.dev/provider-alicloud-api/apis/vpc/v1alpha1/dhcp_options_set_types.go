/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DhcpOptionsSet struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DhcpOptionsSetSpec   `json:"spec,omitempty"`
	Status            DhcpOptionsSetStatus `json:"status,omitempty"`
}

type DhcpOptionsSetSpecAssociateVpcs struct {
	// +optional
	AssociateStatus *string `json:"associateStatus,omitempty" tf:"associate_status"`
	// +optional
	VpcID *string `json:"vpcID,omitempty" tf:"vpc_id"`
}

type DhcpOptionsSetSpec struct {
	State *DhcpOptionsSetSpecResource `json:"state,omitempty" tf:"-"`

	Resource DhcpOptionsSetSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type DhcpOptionsSetSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AssociateVpcs []DhcpOptionsSetSpecAssociateVpcs `json:"associateVpcs,omitempty" tf:"associate_vpcs"`
	// +optional
	DhcpOptionsSetDescription *string `json:"dhcpOptionsSetDescription,omitempty" tf:"dhcp_options_set_description"`
	// +optional
	DhcpOptionsSetName *string `json:"dhcpOptionsSetName,omitempty" tf:"dhcp_options_set_name"`
	// +optional
	DomainName *string `json:"domainName,omitempty" tf:"domain_name"`
	// +optional
	DomainNameServers *string `json:"domainNameServers,omitempty" tf:"domain_name_servers"`
	// +optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run"`
	// +optional
	OwnerID *string `json:"ownerID,omitempty" tf:"owner_id"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
}

type DhcpOptionsSetStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DhcpOptionsSetList is a list of DhcpOptionsSets
type DhcpOptionsSetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DhcpOptionsSet CRD objects
	Items []DhcpOptionsSet `json:"items,omitempty"`
}
