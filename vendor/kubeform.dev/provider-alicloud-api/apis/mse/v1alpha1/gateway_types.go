/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Gateway struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GatewaySpec   `json:"spec,omitempty"`
	Status            GatewayStatus `json:"status,omitempty"`
}

type GatewaySpecSlbList struct {
	// +optional
	AssociateID *string `json:"associateID,omitempty" tf:"associate_id"`
	// +optional
	GatewaySlbMode *string `json:"gatewaySlbMode,omitempty" tf:"gateway_slb_mode"`
	// +optional
	GatewaySlbStatus *string `json:"gatewaySlbStatus,omitempty" tf:"gateway_slb_status"`
	// +optional
	GmtCreate *string `json:"gmtCreate,omitempty" tf:"gmt_create"`
	// +optional
	SlbID *string `json:"slbID,omitempty" tf:"slb_id"`
	// +optional
	SlbIP *string `json:"slbIP,omitempty" tf:"slb_ip"`
	// +optional
	SlbPort *string `json:"slbPort,omitempty" tf:"slb_port"`
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
}

type GatewaySpec struct {
	State *GatewaySpecResource `json:"state,omitempty" tf:"-"`

	Resource GatewaySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type GatewaySpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	BackupVswitchID *string `json:"backupVswitchID,omitempty" tf:"backup_vswitch_id"`
	// +optional
	DeleteSlb *bool `json:"deleteSlb,omitempty" tf:"delete_slb"`
	// +optional
	EnterpriseSecurityGroup *bool `json:"enterpriseSecurityGroup,omitempty" tf:"enterprise_security_group"`
	// +optional
	GatewayName *string `json:"gatewayName,omitempty" tf:"gateway_name"`
	// +optional
	InternetSlbSpec *string `json:"internetSlbSpec,omitempty" tf:"internet_slb_spec"`
	Replica         *int64  `json:"replica" tf:"replica"`
	// +optional
	SlbList []GatewaySpecSlbList `json:"slbList,omitempty" tf:"slb_list"`
	// +optional
	SlbSpec *string `json:"slbSpec,omitempty" tf:"slb_spec"`
	Spec    *string `json:"spec" tf:"spec"`
	// +optional
	Status    *string `json:"status,omitempty" tf:"status"`
	VpcID     *string `json:"vpcID" tf:"vpc_id"`
	VswitchID *string `json:"vswitchID" tf:"vswitch_id"`
}

type GatewayStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// GatewayList is a list of Gateways
type GatewayList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Gateway CRD objects
	Items []Gateway `json:"items,omitempty"`
}
