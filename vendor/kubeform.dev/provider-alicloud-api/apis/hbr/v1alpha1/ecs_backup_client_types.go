/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type EcsBackupClient struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EcsBackupClientSpec   `json:"spec,omitempty"`
	Status            EcsBackupClientStatus `json:"status,omitempty"`
}

type EcsBackupClientSpec struct {
	State *EcsBackupClientSpecResource `json:"state,omitempty" tf:"-"`

	Resource EcsBackupClientSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type EcsBackupClientSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	DataNetworkType *string `json:"dataNetworkType,omitempty" tf:"data_network_type"`
	// +optional
	DataProxySetting *string `json:"dataProxySetting,omitempty" tf:"data_proxy_setting"`
	InstanceID       *string `json:"instanceID" tf:"instance_id"`
	// +optional
	MaxCPUCore *string `json:"maxCPUCore,omitempty" tf:"max_cpu_core"`
	// +optional
	MaxWorker *string `json:"maxWorker,omitempty" tf:"max_worker"`
	// +optional
	ProxyHost *string `json:"proxyHost,omitempty" tf:"proxy_host"`
	// +optional
	ProxyPassword *string `json:"proxyPassword,omitempty" tf:"proxy_password"`
	// +optional
	ProxyPort *string `json:"proxyPort,omitempty" tf:"proxy_port"`
	// +optional
	ProxyUser *string `json:"proxyUser,omitempty" tf:"proxy_user"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	UseHTTPS *bool `json:"useHTTPS,omitempty" tf:"use_https"`
}

type EcsBackupClientStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// EcsBackupClientList is a list of EcsBackupClients
type EcsBackupClientList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of EcsBackupClient CRD objects
	Items []EcsBackupClient `json:"items,omitempty"`
}
