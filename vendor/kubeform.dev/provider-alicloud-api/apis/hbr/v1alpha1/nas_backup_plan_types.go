/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type NasBackupPlan struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NasBackupPlanSpec   `json:"spec,omitempty"`
	Status            NasBackupPlanStatus `json:"status,omitempty"`
}

type NasBackupPlanSpec struct {
	State *NasBackupPlanSpecResource `json:"state,omitempty" tf:"-"`

	Resource NasBackupPlanSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type NasBackupPlanSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	BackupType *string `json:"backupType" tf:"backup_type"`
	CreateTime *string `json:"createTime" tf:"create_time"`
	// +optional
	Detail *string `json:"detail,omitempty" tf:"detail"`
	// +optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled"`
	// +optional
	Exclude      *string `json:"exclude,omitempty" tf:"exclude"`
	FileSystemID *string `json:"fileSystemID" tf:"file_system_id"`
	// +optional
	Include           *string `json:"include,omitempty" tf:"include"`
	NasBackupPlanName *string `json:"nasBackupPlanName" tf:"nas_backup_plan_name"`
	// +optional
	Options   *string  `json:"options,omitempty" tf:"options"`
	Path      []string `json:"path" tf:"path"`
	Retention *string  `json:"retention" tf:"retention"`
	Schedule  *string  `json:"schedule" tf:"schedule"`
	// +optional
	SpeedLimit *string `json:"speedLimit,omitempty" tf:"speed_limit"`
	// +optional
	// Deprecated
	UpdatePaths *bool   `json:"updatePaths,omitempty" tf:"update_paths"`
	VaultID     *string `json:"vaultID" tf:"vault_id"`
}

type NasBackupPlanStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// NasBackupPlanList is a list of NasBackupPlans
type NasBackupPlanList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of NasBackupPlan CRD objects
	Items []NasBackupPlan `json:"items,omitempty"`
}
