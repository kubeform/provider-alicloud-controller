/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AccessStrategy struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AccessStrategySpec   `json:"spec,omitempty"`
	Status            AccessStrategyStatus `json:"status,omitempty"`
}

type AccessStrategySpecDefaultAddrPools struct {
	AddrPoolID *string `json:"addrPoolID" tf:"addr_pool_id"`
	// +optional
	LbaWeight *int64 `json:"lbaWeight,omitempty" tf:"lba_weight"`
}

type AccessStrategySpecFailoverAddrPools struct {
	// +optional
	AddrPoolID *string `json:"addrPoolID,omitempty" tf:"addr_pool_id"`
	// +optional
	LbaWeight *int64 `json:"lbaWeight,omitempty" tf:"lba_weight"`
}

type AccessStrategySpecLines struct {
	// +optional
	LineCode *string `json:"lineCode,omitempty" tf:"line_code"`
}

type AccessStrategySpec struct {
	State *AccessStrategySpecResource `json:"state,omitempty" tf:"-"`

	Resource AccessStrategySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type AccessStrategySpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AccessMode          *string                              `json:"accessMode,omitempty" tf:"access_mode"`
	DefaultAddrPoolType *string                              `json:"defaultAddrPoolType" tf:"default_addr_pool_type"`
	DefaultAddrPools    []AccessStrategySpecDefaultAddrPools `json:"defaultAddrPools" tf:"default_addr_pools"`
	// +optional
	DefaultLatencyOptimization *string `json:"defaultLatencyOptimization,omitempty" tf:"default_latency_optimization"`
	// +optional
	DefaultLbaStrategy *string `json:"defaultLbaStrategy,omitempty" tf:"default_lba_strategy"`
	// +optional
	DefaultMaxReturnAddrNum    *int64 `json:"defaultMaxReturnAddrNum,omitempty" tf:"default_max_return_addr_num"`
	DefaultMinAvailableAddrNum *int64 `json:"defaultMinAvailableAddrNum" tf:"default_min_available_addr_num"`
	// +optional
	FailoverAddrPoolType *string `json:"failoverAddrPoolType,omitempty" tf:"failover_addr_pool_type"`
	// +optional
	FailoverAddrPools []AccessStrategySpecFailoverAddrPools `json:"failoverAddrPools,omitempty" tf:"failover_addr_pools"`
	// +optional
	FailoverLatencyOptimization *string `json:"failoverLatencyOptimization,omitempty" tf:"failover_latency_optimization"`
	// +optional
	FailoverLbaStrategy *string `json:"failoverLbaStrategy,omitempty" tf:"failover_lba_strategy"`
	// +optional
	FailoverMaxReturnAddrNum *int64 `json:"failoverMaxReturnAddrNum,omitempty" tf:"failover_max_return_addr_num"`
	// +optional
	FailoverMinAvailableAddrNum *int64  `json:"failoverMinAvailableAddrNum,omitempty" tf:"failover_min_available_addr_num"`
	InstanceID                  *string `json:"instanceID" tf:"instance_id"`
	// +optional
	Lang *string `json:"lang,omitempty" tf:"lang"`
	// +optional
	Lines        []AccessStrategySpecLines `json:"lines,omitempty" tf:"lines"`
	StrategyMode *string                   `json:"strategyMode" tf:"strategy_mode"`
	StrategyName *string                   `json:"strategyName" tf:"strategy_name"`
}

type AccessStrategyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AccessStrategyList is a list of AccessStrategys
type AccessStrategyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AccessStrategy CRD objects
	Items []AccessStrategy `json:"items,omitempty"`
}
